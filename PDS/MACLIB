./ ADD NAME=$AFTLIST 0100-80001-80001-1200-00021-00021-00000-MACLIB  00
         MACRO
         $AFTLIST  &BEGLIST,&DUMMYNM
         GBLC      &FUNAME(255),&FMODE(255)
         GBLA      &NUMFUN,&HCHAIN(255),&LCHAIN(255),&HEAD
         LCLA      &N
         LCLC      &SPMODE                                         V1L4
         BINTREE
         DS        0F                  ALIGN LIST                  V1L4
&DUMMYNM DC        CL6'*-*',AL1(FUNC+REAL4)    NAME, TYPE          V1L4
         DC        AL1(&HEAD,&HEAD),AL3(&DUMMYNM) LOPTR,HIPTR,ADDR V1L4
&BEGLIST EQU       *
&N       SETA      1
.LOOP    ANOP
&SPMODE  SETC      'FUNC+'                                         V1L4
         AIF       ('&FMODE(&N)' NE 'SUBR').FUNC                   V1L4
&SPMODE  SETC      ''                                              V1L4
.FUNC    DC        CL6'&FUNAME(&N)',AL1(&SPMODE&FMODE(&N))         V1L4
         DC    AL1(&LCHAIN(&N)),AL1(&HCHAIN(&N)),AL3(*-*)          V1L4
&N       SETA      &N+1
         AIF       (&N LE &NUMFUN).LOOP
         MEND
./ ADD NAME=$ERROR   0100-80001-80001-1200-00073-00073-00000-MACLIB  00
         MACRO
&NAME    $ERROR    &ERCD,&RET,&SAVE                                V1L5
         GBLA      &ERROR#
         LCLC      &P4,&P5
         LCLA      &X
         LCLC      &Y
&ERROR#  SETA      &ERROR#+1
&P4      SETC      '&ERCD(4)'
&P5      SETC      '&ERCD(5)'
&NAME    DC        0H'0'
         AIF       (T'&SAVE EQ 'O').NOSAV
         AIF       ('&SYSLIST(3)'(1,4) EQ 'SAVE').SAVOK
         MNOTE '*** INVALID SAVE PARAMETER ***'
.SAVOK   ANOP
.*   SAVE REGISTERS IN LINE
.*  USE XERRENT1 IF ERRCODE IN-LINE (I.E. AT 0(R14))
.* USE XERRENT2 IF ERRCODE OUT OF LINE (I.E. AT 0(R1))
         STM       R0,R15,XHELPS
         AIF       (T'&ERCD EQ 'O').NOCD
         BAL       R14,XERRENT1
         ERRCODE   (&ERCD(1),&ERCD(2),&ERCD(3),&P4,&P5,&ERCD(6))
         AGO       .LDREG
.NOCD    ANOP
         BAL       R14,XERRENT2
.LDREG   LM        R0,R15,XHELPS
         AIF       ('&RET' NE 'DONE' AND '&RET' NE 'LOOP').TRYAGN
         BR        R&RET
         MEXIT
.TRYAGN  ANOP
&X       SETA      1
.LKKX1   ANOP
&Y       SETC      '&X'
         AIF       ('&RET' EQ 'R&Y').LKKX2
.AXIS14  ANOP
&X       SETA      &X+1
         AIF       (&X GT 15).CHKRET
         AIF       (&X EQ 14).AXIS14
         AGO       .LKKX1
.LKKX2   BR        &RET
         MEXIT
.NOSAV   AIF       (T'&ERCD EQ 'O').NOCD1
.*  SAVE REGISTERS AT ERROR EDITOR
.* USE XERRENT3 IF ERRCODE IS IN-LINE (I.E. AT 0(R14))
.* USE XERRENT4 IF ERRCODE IS OUT OF LINE (I.E. AT 0(R1))
         AIF       ('&RET' EQ 'DONE').DONE
&X       SETA      1
.LKKA1   ANOP
&Y       SETC      '&X'
         AIF       ('&RET' EQ 'R&Y').LKKA2
.BXIS14  ANOP
&X       SETA      &X+1
         AIF       (&X GT 15).NXT
         AIF       (&X EQ 14).BXIS14
         AGO       .LKKA1
.NXT     ANOP
         AIF       ('&RET' NE 'LOOP').REG14
         LR        R14,R11
.DONE    ANOP
         BAL       R1,XERRENT4
         ERRCODE   (&ERCD(1),&ERCD(2),&ERCD(3),&P4,&P5,&ERCD(6))
         MEXIT
.LKKA2   LR        R14,&RET
         AGO       .DONE
.REG14   ANOP
         BAL       R14,XERRENT3
         ERRCODE   (&ERCD(1),&ERCD(2),&ERCD(3),&P4,&P5,&ERCD(6))
         AGO       .CHKRET
.NOCD1   ANOP
         BAL       R14,XERRENT4
.CHKRET  AIF       (T'&RET EQ 'O').END
         B         &RET
.END     ANOP
         MEND
./ ADD NAME=$EXIT    0100-80001-80001-1200-00024-00024-00000-MACLIB  00
         MACRO
&NAME $EXIT &TY
 LCLA &AL1
* SUPVR COMMN MACROS - EXIT - 5745-SC-SUP - REL. 28.0
         AIF   (T'&TY EQ 'O').MIS
         AIF   ('&TY' EQ 'OC').OC
         AIF   ('&TY' EQ 'IT').IT
         AIF   ('&TY' EQ 'PC').PC
         AIF   ('&TY' EQ 'MR').MR
         MNOTE 5,'TYPE INVALID - MACRO IGNORED'
         MEXIT
.MR      ANOP
&AL1     SETA  &AL1+7
.OC      ANOP
&AL1     SETA  &AL1+2
.IT      ANOP
&AL1     SETA  &AL1+2
.PC      ANOP
&AL1     SETA  &AL1+17
&NAME    SVC   &AL1
         MEXIT
.MIS     ANOP
         MNOTE 5,'OPERAND OMITTED - MACRO IGNORED'
         MEND
./ ADD NAME=$FLIST1  0100-80001-80001-1200-00011-00011-00000-MACLIB  00
         MACRO
&NAME    $FLIST1   &FN,&MODE
         GBLC      &STATUS,&TEST
         LCLC      &TN
&TN      SETC      '&FN'.'     '
&TN      SETC      '&TN'(1,6)
&TEST    SETC      '&TN'
         STATUS    &FN
         AIF       ('&STATUS'(1,4) NE 'CORE').END
         ADDLIST   &FN,&MODE
.END     MEND
./ ADD NAME=$FREE    0100-80001-80001-1200-00011-00011-00000-MACLIB  00
         MACRO
         $FREE
         GBLA      &FREE#
         LCLA      &I
&FREE#   SETA      &FREE#+1
&I       SETA      1
.A       ANOP
         USING     Z&SYSLIST(&I),&SYSLIST(&I)
&I       SETA      &I+1
         AIF       (&I LE N'&SYSLIST).A
         MEND
./ ADD NAME=$PUNCH   0100-80001-80001-1200-00007-00007-00000-MACLIB  00
         MACRO                                                     DVS2
         $PUNCH    &NAME                                           DVS2
         GBLB      &NDVSD                                          DVS2
         AIF       (&NDVSD).NOPUNCH                                DVS2
         PUNCH     '   CATALR &NAME'                               DVS2
.NOPUNCH ANOP                                                      DVS2
         MEND                                                      DVS2
./ ADD NAME=$READCHK 0100-80001-80001-1200-00026-00026-00000-MACLIB  00
         MACRO                                                     V1L5
         $READCHK  &DUMMY                                          V1L5
         GBLC      &RDONLY             READ ONLY FILES             V1L5
         GBLA      &READSTR,&READEND,&PRINT,&PUNCH,&NOUTILS        V1L5
         AIF       ('&RDONLY' EQ 'OMIT').RDONE                     V1L5
         AIF       (&READEND NE 0).RD1                             V1L5
&READEND SETA      &NOUTILS                                        V1L5
.RD1     ANOP                                                      V1L5
         AIF       ((&READSTR GT 0) AND (&READEND GT 0) AND (&READSTR  *
               LE &NOUTILS) AND (&READEND LE &NOUTILS)).RD2        V1L5
         MNOTE     8,'***  THE READ ONLY FILES ARE NOT IN THE RANGE 0 TX
               O &&NOUTILS (&NOUTILS) *** '                        V1L5
.RD2     ANOP                                                      V1L5
         AIF       (&READSTR LE &READEND).RD3                      V1L5
         MNOTE     8,'*** THE VALUE OF &&READSTR (&READSTR) IS GREATER X
               THAN &&READEND (&READEND) ***'                      V1L5
.RD3     ANOP                                                      V1L5
         AIF   ((&PRINT LT &READSTR) OR (&PRINT GT &READEND)).RD4  V1L5
         MNOTE     8,'***  THE VALUE OF &&PRINT (&PRINT) IS IN THE RANGX
               E OF READ ONLY FILES ***'                           V1L5
.RD4     ANOP                                                      V1L5
         AIF  ((&PUNCH LT &READSTR) OR (&PUNCH GT &READEND)).RDONE V1L5
         MNOTE     8,'***  THE VALUE OF &&PUNCH (&PUNCH) IS IN THE RANGX
               E OF READ ONLY FILES ***'                           V1L5
.RDONE   ANOP                                                      V1L5
         MEND                                                      V1L5
./ ADD NAME=ADDLIST  0100-80001-80001-1200-00008-00008-00000-MACLIB  00
         MACRO
         ADDLIST   &NAME,&MODE
         GBLC      &FUNAME(255),&FMODE(255)
         GBLA      &NUMFUN
&NUMFUN  SETA      &NUMFUN+1
&FUNAME(&NUMFUN)   SETC      '&NAME'
&FMODE(&NUMFUN)    SETC      '&MODE'
         MEND
./ ADD NAME=AFUNCDEF 0100-80001-80001-1200-00135-00135-00000-MACLIB  00
         MACRO
         AFUNCDEF  &CORE=,&OMIT=
         GBLA      &IND1,&IND2,&FJ,&FDYN(255),&NUMFUN
         GBLC      &FSTATUS(255),&FDYA(255)
         LCLA      &L,&J,&K
&NUMFUN  SETA      0
&FJ      SETA      0
&FJ      SETA      &FJ+1
&FDYN(&FJ)   SETA  0
&IND1    SETA      1
&IND2    SETA      1
         FUNCSSET  CCOS
         FUNCSSET  CDABS
         FUNCSSET  CDCOS
         FUNCSSET  CDEXP
         FUNCSSET  CDLOG
         FUNCSSET  CDSIN
         FUNCSSET  CDSQRT
         FUNCSSET  CEXP
         FUNCSSET  CLOG
         FUNCSSET  CMPLX
         FUNCSSET  CONJG
         FUNCSSET  CSIN
         FUNCSSET  CSQRT
         FUNCSSET  DABS
         FUNCSSET  DARCOS
         FUNCSSET  DARSIN
         FUNCSSET  DATAN
         FUNCSSET  DATAN2
         FUNCSSET  DBLE
         FUNCSSET  DCMPLX
         FUNCSSET  DCONJG
         FUNCSSET  DCOS
         FUNCSSET  DCOSH
         FUNCSSET  DCOTAN
         FUNCSSET  DERF
         FUNCSSET  DERFC
         FUNCSSET  DEXP
         FUNCSSET  DFLOAT
         FUNCSSET  DGAMMA
         FUNCSSET  DLGAMA
         FUNCSSET  DLOG
         FUNCSSET  DLOG10
         FUNCSSET  DMAX1
         FUNCSSET  DMIN1
         FUNCSSET  DMOD
         FUNCSSET  DSIGN
         FUNCSSET  DSIN
         FUNCSSET  DSINH
         FUNCSSET  DSQRT
         FUNCSSET  DTAN
         FUNCSSET  DTANH
         FUNCSSET  HFIX
&FSTATUS(&IND1)    SETC    'CORERES'
.*       THIS LOOP IS THE FUNCCORE SECTION
&L       SETA      0
.LOOPC   AIF       (&L GE N'&CORE).ENDCORE
&L       SETA      &L+1
.*       FIND NAME IN (OR AT END OF ) FUNCTION DEPENDENCY TABLE
&FDYA(&FJ) SETC    '&CORE(&L)'
&J       SETA      0
.C1      ANOP
&J       SETA      &J+1
         AIF       ('&FDYA(&J)' NE '&CORE(&L)').C1
.*     SET STATUS OF NAME AND ROUTINES WHICH IT CALLS TO 'CORE'
&K       SETA      1
.C2      AIF       (&FDYN(&K) LT (&J-&K)).C3
         SETSTAT   &FDYA(&K),CORE
.C3      ANOP
&K       SETA      &K+1
         AIF       (&K LE &J).C2
         AIF       (&J NE &FJ).C1
         AGO       .LOOPC
.ENDCORE ANOP
.*       THIS IS THE FUNCOMIT SECTION
&L       SETA      0
.LOOP    AIF       (&L GE N'&OMIT).END
&L       SETA      &L+1
.*       FIND NAME IN (OR AT END OF) FUNCTION DEPENDENCY TABLE
&FDYA(&FJ) SETC    '&OMIT(&L)'
&J       SETA      0
.L1      ANOP
&J       SETA      &J+1
         AIF       ('&FDYA(&J)' NE '&OMIT(&L)').L1
.*       NOW SET STATUS OF GROUPS DEPENDING ON NAME TO 'OMIT'
&K       SETA      &J+&FDYN(&J)
.L2      ANOP
         SETSTAT   &FDYA(&J),OMIT
&J       SETA      &J+1
         AIF       (&J LE &K).L2
         AGO       .LOOP
.END     ANOP
         $FLIST1  CCOS,COMPL8
         $FLIST1  CDABS,REAL8
         $FLIST1  CDCOS,COMPL16
         $FLIST1  CDEXP,COMPL16
         $FLIST1  CDLOG,COMPL16
         $FLIST1  CDSIN,COMPL16
         $FLIST1  CDSQRT,COMPL16
         $FLIST1  CEXP,COMPL8
         $FLIST1  CLOG,COMPL8
         $FLIST1  CMPLX,COMPL8
         $FLIST1  CONJG,COMPL8
         $FLIST1  CSIN,COMPL8
         $FLIST1  CSQRT,COMPL8
         $FLIST1  DABS,REAL8
         $FLIST1  DARCOS,REAL8
         $FLIST1  DARSIN,REAL8
         $FLIST1  DATAN,REAL8
         $FLIST1  DATAN2,REAL8
         $FLIST1  DBLE,REAL8
         $FLIST1  DCMPLX,COMPL16
         $FLIST1  DCONJG,COMPL16
         $FLIST1  DCOS,REAL8
         $FLIST1  DCOSH,REAL8
         $FLIST1  DCOTAN,REAL8
         $FLIST1  DERF,REAL8
         $FLIST1  DERFC,REAL8
         $FLIST1  DEXP,REAL8
         $FLIST1  DFLOAT,REAL8
         $FLIST1  DGAMMA,REAL8
         $FLIST1  DLGAMA,REAL8
         $FLIST1  DLOG,REAL8
         $FLIST1  DLOG10,REAL8
         $FLIST1  DMAX1,REAL8
         $FLIST1  DMIN1,REAL8
         $FLIST1  DMOD,REAL8
         $FLIST1  DSIGN,REAL8
         $FLIST1  DSIN,REAL8
         $FLIST1  DSINH,REAL8
         $FLIST1  DSQRT,REAL8
         $FLIST1  DTAN,REAL8
         $FLIST1  DTANH,REAL8
         $FLIST1  HFIX,INTGER2
         MEND
./ ADD NAME=ARG      0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&NAME    ARG       &ARG,&MODE
&NAME    DC        AL1(SIMPLVAL+&MODE),AL3(&ARG)                   V1L4
         MEND
./ ADD NAME=ASTATLIS 0100-80001-80001-1200-00015-00015-00000-MACLIB  00
         MACRO
         ASTATLIS
         GBLC      &FNAME(255),&FSTATUS(255),&FMODE(255)
         GBLA      &IND1
         LCLA      &N
         LCLC      &NAME                                           V1L4
&N       SETA      1
         MNOTE     0,'  THE STATUS OF EACH SUBPROGRAMME IS AS FOLLOWS'
.LIST    ANOP
&NAME    SETC      '&FNAME(&N)'.'       '                          V1L4
&NAME    SETC      '&NAME'(1,6)                                    V1L4
         MNOTE     *,'   &NAME    &FMODE(&N)     '                 V1L4
&N       SETA      &N+1
         AIF       (&N LT &IND1).LIST
         MEND
./ ADD NAME=BB       0100-80001-80001-1200-00012-00012-00000-MACLIB  00
         MACRO
&NAME    BB        &A,&B
         AIF       ('&B'EQ'').XXX
&NAME    DC        0H'0',AL4(&A-&B)
         AGO       .YYY
.XXX     ANOP
&NAME    DC        0H'0',AL4(&A-XIOBASE)
.YYY     ANOP
         ORG       *-4
         DC        X'47FF'
         ORG       *+2
         MEND
./ ADD NAME=BEGOBJ   0100-80001-80001-1200-00003-00003-00000-MACLIB  00
         MACRO
&A       BEGOBJ    &B
         MEND
./ ADD NAME=BER      0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&NAME    BER       &REG
&NAME    BCR       8,&REG
         MEND
./ ADD NAME=BHR      0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&NAME    BHR       &REG
&NAME    BCR       2,&REG
         MEND
./ ADD NAME=BINTREE  0100-80001-80001-1200-00039-00039-00000-MACLIB  00
         MACRO
         BINTREE
         GBLA      &NUMFUN,&HCHAIN(255),&LCHAIN(255)
         GBLA      &HEAD
         LCLA      &TOP,&HI,&LOW,&STACK(255)
         LCLA &L,&NXTOP,&N,&NOTE(255)
         LCLA      &LINK
&LOW     SETA      1
&TOP     SETA      &NUMFUN+1
&STACK(&TOP)       SETA      &TOP
&HEAD    SETA      (&LOW+&TOP)/2
.AGAIN   ANOP
&HI      SETA      &STACK(&TOP)
&L       SETA      (&LOW+&HI)/2
&TOP     SETA      &TOP-1
&STACK(&TOP)       SETA      &L
         AIF       (&NOTE(&L) EQ 1).POPUP
&LINK    SETA      &TOP+1
&LCHAIN(&STACK(&LINK))       SETA   &L
&NOTE(&STACK(&LINK))    SETA    1
         AIF       (&HCHAIN(&L) EQ &STACK(&LINK)).RESET1
.TEST    AIF       (&L EQ &LOW).POPUP
         AGO       .AGAIN
.RESET1  ANOP
&LCHAIN(&STACK(&LINK))  SETA      0
         AGO       .TEST
.POPUP   ANOP
&TOP     SETA      &TOP+1
         AIF       (&STACK(&TOP) EQ (&NUMFUN+1)).END
&NXTOP   SETA      &TOP+1
         AIF       ((&STACK(&NXTOP)-&STACK(&TOP)) EQ 1).POPUP
&LOW     SETA      &STACK(&TOP)
&HI      SETA      &STACK(&NXTOP)
&N       SETA      (&LOW+&HI)/2
&HCHAIN(&STACK(&TOP))   SETA &N
&STACK(&TOP)       SETA      &N
         AGO       .AGAIN
.END     ANOP
         MEND
./ ADD NAME=BLR      0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&NAME    BLR       &REG
&NAME    BCR       4,&REG
         MEND
./ ADD NAME=BNER     0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&NAME    BNER      &REG
&NAME    BCR       7,&REG
         MEND
./ ADD NAME=BNEW     0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&NAME    BNEW      &LABEL
&NAME    BE        &LABEL
         MEND
./ ADD NAME=BNHR     0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&NAME    BNHR      &R
&NAME    BCR       13,&R
         MEND
./ ADD NAME=BNLCR    0100-80001-80001-1200-00006-00006-00000-MACLIB  00
         MACRO
&NAME    BNLCR     &REG
&NAME    BCR       12,&REG
.*   BRANCH NOT LOGICAL CARRY TO &REG
.*   CONDITION CODE SET BY PREVIOUS  LOGICAL ADD OR SUBTRACT
         MEND
./ ADD NAME=BNLR     0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&A       BNLR      &B
&A       BCR       11,&B
         MEND
./ ADD NAME=BNMR     0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&A       BNMR      &B
&A       BCR       11,&B
         MEND
./ ADD NAME=BNOR     0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&NAME    BNOR      &REG
&NAME    BCR       14,&REG
         MEND
./ ADD NAME=BNPR     0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&NAME    BNPR      &REG
&NAME    BCR       13,&REG
         MEND
./ ADD NAME=BNZR     0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&A       BNZR      &B
&A       BCR       7,&B
         MEND
./ ADD NAME=BOLD     0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&NAME    BOLD      &LABEL
&NAME    BNE       &LABEL
         MEND
./ ADD NAME=BOR      0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&LABEL   BOR       &REG
&LABEL   BCR       1,&REG
         MEND
./ ADD NAME=BPR      0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&NAME    BPR       &REG
&NAME    BCR       2,&REG
         MEND
./ ADD NAME=BZR      0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&NAME    BZR       &REG
&NAME    BCR       8,&REG
         MEND
./ ADD NAME=CALLDCL  0100-80001-80001-1200-00010-00010-00000-MACLIB  00
         MACRO
&NAME    CALLDCL   &DNAME,&LEVEL
         CNOP      2,4
         USING     *,R15
&NAME    L     R4,=V(XC@LDC)                                       V1L4
          BALR     R15,R4
         DROP      R15                                             V1L4
         DC        CL8'&NAME'
         DC    A(&DNAME)                                           V1L4
         MEND
./ ADD NAME=CALLDUBL 0100-80001-80001-1200-00012-00012-00000-MACLIB  00
         MACRO
&NAME    CALLDUBL  &DNAME
         LCLA      &M
&M       SETA      N'&SYSLIST-1
         CNOP      2,4
         USING     *,R15
&NAME    L     R4,=V(XC@LD&M)                                      V1L4
         BALR      R15,R4
         DROP      R15                                             V1L4
         DC        CL8'&NAME'
         DC    A(&DNAME)                                           V1L4
         MEND
./ ADD NAME=CBALR    0100-80001-80001-1200-00005-00005-00000-MACLIB  00
         MACRO
&A       CBALR
&A       BALR      RP,0
         USING     *,RP
         MEND
./ ADD NAME=CCTABLE  0100-80001-80001-1200-00015-00015-00000-MACLIB  00
         MACRO
         CCTABLE
         GBLC      &CCTAB1(255)
         GBLA      &CCTAB2(255)
         LCLA      &NUM,&I,&LINES
&I       SETA      1
&NUM     SETA      N'&SYSLIST
.LOOP      ANOP
&CCTAB1(&I)   SETC   '&SYSLIST(&I,1)'(2,1)
&CCTAB2(&I)  SETA   &SYSLIST(&I,2)
&I       SETA      &I+1
         AIF       (&I LE &NUM).LOOP
&CCTAB1(&I) SETC  '$'
&CCTAB2(&I)  SETA  1
         MEND
./ ADD NAME=CDROP    0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&A       CDROP     &B
         FREE      &B(2)                                           V1L4
         MEND
./ ADD NAME=CENT     0100-80001-80001-1200-00011-00011-00000-MACLIB  00
         MACRO
&LABEL   CENT      &SAVER
         GBLA      &CENT#
&CENT#   SETA      &CENT#+1
         CNOP      0,4
&LABEL   STM       R14,R11,12(R13)
         BAL       RP,CENT
         USING     *,RP
         DC        A(&SAVER)                                       V1L4
         USING     &SAVER,R13
         MEND
./ ADD NAME=CHCKA    0100-80001-80001-1200-00017-00017-00000-MACLIB  00
         MACRO
&NAME    CHCKA     &ADDR,&MODE,&VL                                 V1L4
         LCLC      &D                                              V1L4
&D       SETC      '&ADDR'(1,1)                                    V1L4
&NAME    CLI       &ADDR,SIMPLVAL+&MODE                            V1L4
         BE        *+12                                            V1L4
         CLI       &ADDR,&MODE
         AIF       ('&VL' NE '').VL    VARIABLE-LENGTH ARGLIST FLAG ?L4
         AIF       ('&D' EQ '4' OR '&D' EQ '0').OK                 V1L4
         MNOTE     8,'### INVALID USE OF CHCKA ###'                V1L4
.OK      BNE       XBADARG+4-&D                                    V1L4
         MEXIT                                                     V1L4
.VL      AIF       ('&VL' NE 'VL').BADVL                           V1L4
         AIF       ('&D' EQ '0').OKVL                              V1L4
.BADVL   MNOTE     8,'### INVALID VL USE OF CHCKA ###'             V1L4
.OKVL    BNE       XVLARGS                                         V1L4
         MEND
./ ADD NAME=CHCKA2   0100-80001-80001-1200-00007-00007-00000-MACLIB  00
         MACRO
&NAME    CHCKA2    &ADDR,&MODE
&NAME    TM        &ADDR,ARRAYELM      LAST ARG WAS ARRAY ELT ?    V1L4
         BNO       *+8
         LA        R1,4(,R1)
         CHCKA     &ADDR,&MODE
         MEND
./ ADD NAME=CHCKDEF  0100-80001-80001-1200-00005-00005-00000-MACLIB  00
         MACRO
&NAME    CHCKDEF   &MODE,&ADDR
&NAME    CLC       XUNDEF(L&MODE),&ADDR
         EX        R0,XNOPDEFZ
         MEND
./ ADD NAME=CHCKL    0100-80001-80001-1200-00015-00015-00000-MACLIB  00
         MACRO
&NAME    CHCKL     &ADDR,&MODE,&IFNOT                              V1L4
         LCLC      &D
&D       SETC      '&ADDR'(1,1)
&NAME    TM        &ADDR,ARRAYELM      LAST ARG WAS ARRAY ELT ?    V1L4
         BNO       *+8
         LA        R1,4(,R1)
         CLI       &ADDR,FNARGTRM+&MODE  PROPER MODE AND TYPE ?    V1L4
         AIF       ('&IFNOT' NE '').IFNOT                          V1L4
         AIF       ('&D' EQ '4' OR '&D' EQ '8' OR '&D' EQ '0').OK
         MNOTE  ' *** INVALID USE OF CHCKL *** '
.OK      BNE       XFENT99+8-&D
         MEXIT                                                     V1L4
.IFNOT   BNE       &IFNOT                                          V1L4
         MEND                                                      V1L4
./ ADD NAME=CHCKLF   0100-80001-80001-1200-00006-00006-00000-MACLIB  00
         MACRO
&NAME    CHCKLF
&NAME    IF        (ZR1,LAST),XERRSR21
         B         XERRSR41
         MNOTE     8,'###CHCKLF MACRO IS TO BE RETIRED###'         V1L4
         MEND
./ ADD NAME=CHCKLSR  0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&NAME    CHCKLSR   &ADDR
&NAME    CHCKL     &ADDR,SPARGTRM-FNARGTRM                         V1L4
         MEND
./ ADD NAME=CLABLE   0100-80001-80001-1200-00005-00005-00000-MACLIB  00
         MACRO
&A       CLABLE    &B
         AIF       ('&A'EQ'').A
&A       DC        0H'0'
.A       MEND
./ ADD NAME=CLINK1   0100-80001-80001-1200-00026-00026-00000-MACLIB  00
         MACRO
&A       CLINK1    &B,&C,&D
         AIF       ('&D'EQ'').A1
&A       L         &D,=A(&B)                                       V1L5
         AGO       .A5
.A1      ANOP
&A       L         RW,=A(&B)                                       V1L5
.A5      AIF       ('&C'EQ'').A2
         AIF       ('&C'EQ'DONE').A3
         AIF       ('&C'EQ'LOOP').A4
         LA        RDONE,&C
         AGO       .A3
.A4      ANOP
         LR        RDONE,R&C
.A3      AIF       ('&D'EQ'').A7
         BR        &D
         MEXIT
.A7      ANOP
         BR        RW
         MEXIT
.A2      AIF       ('&D'EQ'').A6
         BALR      RDONE,&D
         MEXIT
.A6      ANOP
         BALR      RDONE,RW
         MEND
./ ADD NAME=CMENT    0100-80001-80001-1200-00008-00008-00000-MACLIB  00
         MACRO
&A       CMENT     &B,&C
         CNOP      0,4
&A       STM       R14,R11,12(R13)
         BAL       RDONE,CMENT
         DC        A(&B)                                           V1L4
         DC        A(&C+CENTUSE-CENTSEQ)                           V1L4
         MEND
./ ADD NAME=COREGEN  0100-80001-80001-1200-00015-00015-00000-MACLIB  00
         MACRO
         COREGEN
         GBLC      &LIBSTAK,&CORLIST(255)
         GBLA      &CORE#
         AIF       ('&LIBSTAK' EQ 'USE').LOOP
         DC        0D'0'
DMYNAME  DC        CL8' '
DMYTTR   DC        4X'00'
STAKBOT  EQU       *
.LOOP    ANOP
         DC        CL8'&CORLIST(&CORE#)',4X'00'
&CORE#   SETA      &CORE#-1
         AIF       (&CORE# NE 0).LOOP
TABLE    EQU       *-12
         MEND
./ ADD NAME=CRET     0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&LABEL   CRET
&LABEL   B         CRET
         MEND
./ ADD NAME=CSNAP    0100-80001-80001-1200-00037-00037-00000-MACLIB  00
         MACRO
&NAME    CSNAP     &IDENT,&ADDR,&NBYTES
         GBLC      &SNAPS
         GBLA      &SNAPS#
&SNAPS#  SETA      &SNAPS#+1
         AIF       ('&NAME'EQ'').SNAPS1
         MNOTE     '***ERROR*** LABLE INVALID IN SNAP MACRO'
.SNAPS1  ANOP
         AIF       ('&SNAPS'EQ'OMIT').SNAPS2
         STM       R14,R12,XSNAPSAV+12
         AIF       ('&ADDR' EQ '').A
         AIF       ('&ADDR'(1,1)EQ'(').X
         LA        R1,&ADDR
         AGO       .A
.X       ANOP
         AIF       ('&ADDR'EQ'(R1)').A
         LR        R1,&ADDR
.A       ANOP
         AIF       ('&NBYTES' EQ '').B
         AIF       ('&NBYTES'(1,1)EQ'(').Y
         AIF       ('&NBYTES'NE'1').ZZZ
         SR        R2,R2
         AGO       .B
.ZZZ     ANOP
         LA        R2,&NBYTES
         BAL       R104,XSNAP1
         AGO       .Z
.Y       ANOP
         AIF       ('&NBYTES'EQ'(R2)').B
         LR        R2,&NBYTES
.B       ANOP
         BAL       R104,XSNAP
.Z       ANOP
         DC        CL8'&IDENT '
         LM        R14,R12,XSNAPSAV+12
.SNAPS2  ANOP
         MEND
./ ADD NAME=DEXTRN   0100-80001-80001-1200-00006-00006-00000-MACLIB  00
         MACRO
         DEXTRN    &FN
         GBLC      &FUNCMOD
         AIF       ('&FUNCMOD' NE 'DISK').DEND
         EXTRN     &FN
.DEND    MEND
./ ADD NAME=DISK     0100-80001-80001-1200-00009-00009-00000-MACLIB  00
         MACRO                                                     V1L4
         DISK
         GBLB  &DVSD                                               V1L5
         COPY  CDEFN                                               V1L4
FUNCREFS DSECT                                                     V1L4
         FUNCREFS                                                  V1L4
         FUNCDEFS                                                  V1L4
         ERRTABLE                                                  V1L4
         MEND                                                      V1L4
./ ADD NAME=EMESSAGE 0100-80001-80001-1200-00024-00024-00000-MACLIB  00
         MACRO
         EMESSAGE &A,&B,&TEXT,&D,&E
         GBLC  &WATTYPE,&ERROPT,&ERRSTAT
         LCLC      &C1,&C2                                         V1L3
         AIF   ('&ERROPT' EQ 'CODE').NEXT
         AIF   ('&ERROPT' NE 'READ').BYPASS1
         ERRSTAT &A&B
         AIF   ('&ERRSTAT' NE 'CORE').NEXT
.BYPASS1 ANOP
&C1      SETC  '&A'
&C2      SETC  '&B'
         AIF   ('&D' EQ '').USEW5
&C1      SETC  '&D'
&C2      SETC  '&E'
.USEW5   AIF   ('&WATTYPE' EQ 'DISTR').PROPER
         DC        AL1($C&SYSNDX-&A&B.TEXT-1) LENGTH-1 OF TEXT     V1L5
&A&B.TEXT DC    C'&C1-&C2 ',C&TEXT
$C&SYSNDX EQU *                                                    V1L5
         MEXIT
.PROPER  ANOP
         DC        AL1($C&SYSNDX-&A&B.TEXT-1) LENGTH-1 OF TEXT     V1L5
&A&B.TEXT DC    C&TEXT
$C&SYSNDX EQU *                                                    V1L5
.NEXT    MEND
./ ADD NAME=ENDOBJ   0100-80001-80001-1200-00003-00003-00000-MACLIB  00
         MACRO
&A       ENDOBJ    &B
         MEND
./ ADD NAME=EQUREGS  0100-80001-80001-1200-00020-00020-00000-MACLIB  00
      MACRO
&ADDR    EQUREGS
&ADDR    DS        0H
R0       EQU       0
R1       EQU       1
R2       EQU       2
R3       EQU       3
R4       EQU       4
R5       EQU       5
R6       EQU       6
R7       EQU       7
R8       EQU       8
R9       EQU       9
R10      EQU       10
R11      EQU       11
R12      EQU       12
R13      EQU       13
R14      EQU       14
R15      EQU       15
         MEND
./ ADD NAME=ERRCODE  0100-80001-80001-1200-00087-00087-00000-MACLIB  00
         MACRO
&NAME    ERRCODE   &LIST
         GBLC      &AC(8),&IN(21)
         GBLA      &EXPAND,&IACMAX,&IINMAX
         LCLA      &IAC,&IIN,&BUFV,&FLAG
         LCLC      &INP,&REG,&MESNO,&ERCD,&ACTN,&ACD,&NCD
&REG     SETC      '0'
&MESNO   SETC      '0'
         AIF       (&EXPAND GT 0).CHKACTN
.*  THE FOLLOWING DEFINITIONS ARE DONE ONCE PER ASSEMBLY
&EXPAND  SETA      1
&AC(1)   SETC      'LANG'              0
&AC(2)   SETC      'WARN'              1
&AC(3)   SETC      'BOOT'              2
&AC(4)   SETC      'ZERO'              3
&AC(5)   SETC      'NOEX'              4
&AC(6)   SETC      'NOAC'              5
&AC(7)   SETC      'TRAZ'              6
&IACMAX  SETA      8
&IN(1)   SETC      'SYM'               1
&IN(2)   SETC      'DEL'               2
&IN(3)   SETC      'STN'               3
&IN(4)   SETC      'ISN'               4
&IN(5)   SETC      'REL'               5
&IN(6)   SETC      'NAM'               6
&IN(7)   SETC      'CSN'               7
&IN(8)   SETC      'USN'               8
&IN(9)   SETC      'CHR'               9
&IN(10)  SETC      'VM8'              10
&IN(11)  SETC      'VM6'              11
&IN(12)  SETC      'VAR'              12
&IN(13)  SETC      'NAV'              13
&IN(14)  SETC      'NSS'              14
&IN(15)  SETC      'INT'              15
&IN(16)  SETC      'ARR'              16
&IN(17)  SETC      'NAL'              17
&IN(18)  SETC      'VLS'              18
&IN(19)  SETC      'LIN'              19
&IN(20)  SETC      'ENT'              20
&IINMAX  SETA      21
.*  CHECK ACTION PARAMETER
.CHKACTN ANOP
&ACTN    SETC      '&LIST(1)'
&AC(&IACMAX) SETC  '&ACTN'
.ACLOOP  ANOP
&IAC     SETA      &IAC+1
         AIF       ('&ACTN' NE '&AC(&IAC)').ACLOOP
         AIF       (&IAC NE &IACMAX).CHKCODE
         MNOTE     '    &ACTN IS INVALID ACTION PARAMETER'
.*    CHECK ERROR CODE PARAMETERS
.CHKCODE ANOP
&ACD     SETC      '&LIST(2)'
&NCD     SETC      '&LIST(3)'
         AIF       ('&ACD' NE 'POINTER').CHK1
&ERCD    SETC      '&NCD'
         AGO       .CHKINFO
.CHK1    AIF       ('&ACD' NE 'INREG').CHK2
&ERCD    SETC      '&NCD'.'+16'
         AGO       .CHKINFO
.CHK2    ANOP
&ERCD    SETC      '&ACD'.'&NCD'
.*     CHECK INFO PARAMETERS
.CHKINFO AIF       (T'&LIST(4) EQ 'O' OR K'&LIST(4) EQ 0).CHKMES
&FLAG    SETA      1
&INP     SETC      '&LIST(4)'(1,3)
&IN(&IINMAX) SETC  '&INP'
.INFLOOP ANOP
&IIN     SETA      &IIN+1
         AIF       ('&INP' NE '&IN(&IIN)').INFLOOP
         AIF       (&IIN NE &IINMAX).OKIN
         MNOTE     '    &INP IS INVALID INFO KEYWORD'
         AGO       .CHKMES
.OKIN    ANOP
&REG     SETC      '&LIST(4)'(4,8)
.*    CHECK MESSAGE PARAMETER
.CHKMES  AIF       (T'&LIST(5) EQ 'O' OR K'&LIST(5) EQ 0).CHKBUF
&FLAG    SETA      1
&MESNO   SETC      '&LIST(5)'
.*    CHECK BUFFER PARAMETER
.CHKBUF  AIF       (T'&LIST(6) EQ 'O' OR K'&LIST(6) EQ 0).OUTPUT
&BUFV    SETA      1
.OUTPUT  ANOP
&NAME    DC  0H'0',AL.1(&FLAG),AL.1(&BUFV),AL.1(0),AL.4(&IAC-1),AL.9(&E*
               RCD)
         AIF   (&FLAG EQ 0).END
         DC        AL.1(0),AL.6(&MESNO),AL.5(&IIN),AL.4(&REG)
.END     MEND
./ ADD NAME=ERRDEFN  0100-80001-80001-1200-00043-00043-00000-MACLIB  00
         MACRO
         ERRDEFN &ERRCD,&W4CODE
         GBLA  &ERRNUM
         GBLC  &ERROPT,&ERRSTAT,&MINERR,&MAXERR
         LCLC  &LCLCODE
&ERRNUM  SETA  &ERRNUM+1
         AIF   ('&ERRCD' EQ 'RESERVED').IGNORE
&ERRCD   EQU   &ERRNUM+31
.IGNORE  AIF   ('&SYSECT' NE 'ERROR').NEXT
         AIF   ('&ERROPT' EQ 'FULL').FULL
         AIF   ('&ERROPT' EQ 'READ').READ
.*ASSUME &ERROPT IS 'CODE'
         AIF   ('&ERRCD' NE 'RESERVED').NOTRES1
         DC    CL3'???'            RESERVED FOR FUTURE USE
         MEXIT
.NOTRES1 ANOP
&LCLCODE SETC  '&ERRCD'
         AIF   ('&W4CODE' EQ '').USEW5
&LCLCODE SETC  '&W4CODE'
.USEW5   ANOP
         DC    CL3'&LCLCODE'
         MEXIT
.FULL    AIF   ('&ERRCD' NE 'RESERVED').NOTRES2
         DC    AL2(0)              RESERVED FOR FUTURE USE
         MEXIT
.NOTRES2 ANOP
         DC    AL2(&ERRCD.TEXT-1-ERRTEXT)
         MEXIT
.READ    AIF   ('&ERRCD' NE 'RESERVED').NOTRES3
         AIF   ('&MINERR' EQ '').NEXT
         DC    AL1(0)              RESERVED FOR FUTURE USE
         MEXIT
.NOTRES3 ERRSTAT &ERRCD
         AIF   ('&ERRSTAT' EQ 'CORE').INCORE
         AIF       ('&MINERR' EQ '').NEXT
         DC    X'00',0C'&ERRCD'    TEXT NOT IN CORE
         MEXIT
.INCORE  AIF   ('&MINERR' NE '').SKIP
&MINERR  SETC  '&ERRCD'
.SKIP    ANOP
&MAXERR  SETC      '&ERRCD'
         DC    AL1((&ERRCD.TAB2-ERR2TAB)/2+1)
.NEXT    MEND
./ ADD NAME=ERRLOCN  0100-80001-80001-1200-00024-00024-00000-MACLIB  00
         MACRO
         ERRLOCN &CORE=
         GBLC  &ERROPT,&CORERRS(255)
         GBLA  &ERCORI
         LCLA  &I
         AIF   ('&ERROPT' NE 'READ').EXIT
&ERCORI  SETA  2
&CORERRS(1)  SETC  'KO9'
&CORERRS(2)  SETC  'KOA'
         AIF   ('&CORE' EQ '').EXIT
&I       SETA  N'&CORE+2
         AIF   (&I LE 254).OK
         MNOTE '*** MAX OF 254 IN-CORE TEXTS ALLOWED. FIRST 254 USED'
&I       SETA  254
.OK      AIF   (&I GT 1).GT1
         AIF   ('&CORE(1)' NE 'ALL').GT1
         MNOTE '***ERROPT=FULL ASSUMED'
&ERROPT  SETC  'FULL'
         MEXIT
.GT1     ANOP
&ERCORI  SETA  &ERCORI+1
&CORERRS(&ERCORI) SETC '&CORE(&ERCORI-2)'
         AIF   (&ERCORI LT &I).GT1
.EXIT    MEND
./ ADD NAME=ERRSTAT  0100-80001-80001-1200-00017-00017-00000-MACLIB  00
         MACRO
         ERRSTAT &ERRCD
         GBLC  &ERROPT,&ERRSTAT,&CORERRS(255)
         GBLA  &ERCORI
         LCLA  &I
         AIF   ('&ERROPT' EQ 'CODE').EXIT
         AIF   ('&ERROPT' EQ 'FULL').INCORE
&ERRSTAT SETC  'DISC'
         AIF   (&ERCORI EQ 0).EXIT
.LOOP    ANOP
&I       SETA  &I+1
         AIF   ('&CORERRS(&I)' EQ '&ERRCD').INCORE
         AIF   (&I LT &ERCORI).LOOP
         MEXIT
.INCORE  ANOP
&ERRSTAT SETC  'CORE'
.EXIT    MEND
./ ADD NAME=ERRTABLE 0100-80001-80001-1200-00353-00353-00000-MACLIB  00
         MACRO
         ERRTABLE
         GBLC      &WHOSIT,&RDONLY                                 V1L5
.*   THIS MACRO DEFINES ALL ERROR CODES. TO ADD A NEW ONE, PUT IT AT
.*    THE END AND ADD AN APPROPRIATE MESSAGE TO DECK
.*        WATFIV.SOURCE(ERRTEXTS). MESSAGES CAN BE PLACED ANYWHERE IN
.*          ERRTEXTS ,I.E. , NOT NECESSARILY AT THE END.
.*  OTHER INSTALLATIONS:PLEASE DO NOT USE THE CODES 'RESERVED' BY
.*  WATFOR PROJECT;SINCE THESE MAY BE REQUIRED ON UPDATES
         GBLC      &STR                                            ST1
         ERRDEFN   AL0
         ERRDEFN   AL1
         ERRDEFN   BD0
         ERRDEFN   BD1
         ERRDEFN   CC0
         ERRDEFN   CC1
         ERRDEFN   CC2
         ERRDEFN   CC3
         ERRDEFN   CC4
         ERRDEFN   CC5
         ERRDEFN   CC6
         ERRDEFN   CC7
         ERRDEFN   CC8
         ERRDEFN   CC9
         ERRDEFN   CM0
         ERRDEFN   CM1
         ERRDEFN   CM2
         ERRDEFN   CN0
         ERRDEFN   CN1
         ERRDEFN   CN2
         ERRDEFN   CN3
         ERRDEFN   CN4
         ERRDEFN   CN5
         ERRDEFN   CN6
         ERRDEFN   CN7
         ERRDEFN   CN8
         ERRDEFN   CP0
         ERRDEFN   CP1
         ERRDEFN   FM7                                             V1L2
         ERRDEFN   EQ2
         ERRDEFN   CP4
         ERRDEFN   CV0
         ERRDEFN   CV1
         ERRDEFN   DA0
         ERRDEFN   DA1
         ERRDEFN   DA2
         ERRDEFN   DA3
         ERRDEFN   DA4
         ERRDEFN   DA5
         ERRDEFN   DA6
         ERRDEFN   DA7
         ERRDEFN   DA8
         ERRDEFN   DA9
         ERRDEFN   DF0
         ERRDEFN   DF1
         ERRDEFN   DF2
         ERRDEFN   DM0
         ERRDEFN   DM1
         ERRDEFN   DM2
         ERRDEFN   DM3
         ERRDEFN   DO0
         ERRDEFN   DO1
         ERRDEFN   DO2
         ERRDEFN   DO3
         ERRDEFN   DO4
         ERRDEFN   DO5
         ERRDEFN   DO6
         ERRDEFN   DO7
         ERRDEFN   DO8
         ERRDEFN   DO9
         ERRDEFN   DOA
         ERRDEFN   EC0
         ERRDEFN   EC1
         ERRDEFN   EC2
         ERRDEFN   EC3
         ERRDEFN   EC4
         ERRDEFN   EC5
         ERRDEFN   EN0
         ERRDEFN   EN1
         ERRDEFN   EN3                                             V1L2
         ERRDEFN   EQ0
         ERRDEFN   EQ1
         ERRDEFN   EQ3
         ERRDEFN   EV0
         ERRDEFN   EV2
         ERRDEFN   EX0
         ERRDEFN   EX1
         ERRDEFN   EX2
         ERRDEFN   EX3
         ERRDEFN   EX4
         ERRDEFN   EX5
         ERRDEFN   EX6
         ERRDEFN   EY0
         ERRDEFN   EY1
         ERRDEFN   EY2
         ERRDEFN   EY3
         ERRDEFN   EY4
         ERRDEFN   EY5
         ERRDEFN   FM0
         ERRDEFN   FM1
         ERRDEFN   FM2
         ERRDEFN   FM6
         ERRDEFN   FM4
         ERRDEFN   FM5
         ERRDEFN   FT0
         ERRDEFN   FT1
         ERRDEFN   FT2
         ERRDEFN   FT3
         ERRDEFN   FT4
         ERRDEFN   FT5
         ERRDEFN   FT6
         ERRDEFN   FT7
         ERRDEFN   FT8
         ERRDEFN   FT9
         ERRDEFN   FTA
         ERRDEFN   FTB
         ERRDEFN   FTC
         ERRDEFN   FTD
         ERRDEFN   FTE
         ERRDEFN   FTF
         ERRDEFN   FTG
         ERRDEFN   FTH
         ERRDEFN   FN1
         ERRDEFN   FN2
         ERRDEFN   FTI                                             V1L4
         ERRDEFN   FN4
         ERRDEFN   FN5
         ERRDEFN   FN6
         ERRDEFN   GO0
         ERRDEFN   GO1
         ERRDEFN   GO2
         ERRDEFN   GO3
         ERRDEFN   GO4
         ERRDEFN   GO5
         ERRDEFN   HO0
         ERRDEFN   HO1
         ERRDEFN   HO2
         ERRDEFN   HO3
         ERRDEFN   IF0
         ERRDEFN   IF1
         ERRDEFN   IF2
         ERRDEFN   IM0
         ERRDEFN   IM1
         ERRDEFN   CCA                                             V1L4
         ERRDEFN   IM3
         ERRDEFN   IM4
         ERRDEFN   IM5
         ERRDEFN   IM6
         ERRDEFN   IM7
         ERRDEFN   IO0
         ERRDEFN   IO1
         ERRDEFN   IO2
         ERRDEFN   IO3
         ERRDEFN   IO4
         ERRDEFN   IO5
         ERRDEFN   IO6
         ERRDEFN   IO7
         ERRDEFN   JB0
         ERRDEFN   JB1
         ERRDEFN   IOA                                             V1L5
         ERRDEFN   KO0
         ERRDEFN   KO1
         ERRDEFN   KO2
         ERRDEFN   KO3
         ERRDEFN   KO4
         ERRDEFN   KO5
         ERRDEFN   KO6
         ERRDEFN   KO7
         ERRDEFN   KO8
         ERRDEFN   LG0
         ERRDEFN   LI0
         ERRDEFN   LI1
         ERRDEFN   LI2
         ERRDEFN   LI3
         ERRDEFN   LI4
         ERRDEFN   LI5
         ERRDEFN   LI6
         ERRDEFN   LI7
         ERRDEFN   LI8
         ERRDEFN   LI9
         ERRDEFN   LIA
         ERRDEFN   LIB
         ERRDEFN   LIC
         ERRDEFN   LID
         ERRDEFN   LIE
         ERRDEFN   LIF
         ERRDEFN   LIG
.*  LI-H IS DEAD; DO NOT RESURRECT.                                V1L4
         ERRDEFN   CCB                                             V1L5
         ERRDEFN   MD0
         ERRDEFN   MD1
         ERRDEFN   MD2
         ERRDEFN   MD3
         ERRDEFN   MO0
         ERRDEFN   MO1
         ERRDEFN   MO2
         ERRDEFN   MO3
         ERRDEFN   MO4
         ERRDEFN   NL0
         ERRDEFN   NL1
         ERRDEFN   NL2
         ERRDEFN   NL3
         ERRDEFN   NL4
         ERRDEFN   STB                                             V1L4
         ERRDEFN   NL6
         ERRDEFN   NL7
         ERRDEFN   PC0
         ERRDEFN   PC1
         ERRDEFN   PS0
         ERRDEFN   NL8                                             V1L5
         ERRDEFN   RE1
         ERRDEFN   RE2
         ERRDEFN   RE3
         ERRDEFN   RE4
         ERRDEFN   SF1
         ERRDEFN   SF2
         ERRDEFN   SF3
         ERRDEFN   SF4
         ERRDEFN   SF5
         ERRDEFN   SR0
         ERRDEFN   SR1
         ERRDEFN   SR2
         ERRDEFN   SR3
         ERRDEFN   SR4
         ERRDEFN   SR5
         ERRDEFN   SR6
         ERRDEFN   SR7
         ERRDEFN   SR8
         ERRDEFN   SR9
         ERRDEFN   SRA
         ERRDEFN   SS0
         ERRDEFN   SS1
         ERRDEFN   SS2
         ERRDEFN   SS3
         ERRDEFN   ST0
         ERRDEFN   ST1
         ERRDEFN   ST2
         ERRDEFN   ST3
         ERRDEFN   ST4
         ERRDEFN   ST5
         ERRDEFN   STA                                             V1L2
         ERRDEFN   ST7
         ERRDEFN   ST8
         ERRDEFN   ST9
         ERRDEFN   SV0
         ERRDEFN   SV1
         ERRDEFN   SV2
         ERRDEFN   SV3
         ERRDEFN   SV4
         ERRDEFN   SV5
         ERRDEFN   SX0
         ERRDEFN   SX1
         ERRDEFN   SX2
         ERRDEFN   SX3
         ERRDEFN   SX4
         ERRDEFN   SX5
         ERRDEFN   SX6
         ERRDEFN   SX7
         ERRDEFN   SX8
         ERRDEFN   SX9
         ERRDEFN   SXA
         ERRDEFN   TY0
         ERRDEFN   TY1
         ERRDEFN   UN0
         ERRDEFN   UN1
         ERRDEFN   UN2
         ERRDEFN   UN3
         ERRDEFN   UN4
         ERRDEFN   UN5
         ERRDEFN   UN6
         ERRDEFN   UN7
         ERRDEFN   UN8
         ERRDEFN   UN9
         ERRDEFN   UNA
         ERRDEFN   UNB
         ERRDEFN   UNC
         ERRDEFN   UND
         ERRDEFN   UNE
         ERRDEFN   UNF
         ERRDEFN   UNG
         ERRDEFN   UNH
         ERRDEFN   UNI
         ERRDEFN   UNJ
         ERRDEFN   UNK
         ERRDEFN   UV0
         ERRDEFN   UV3
         ERRDEFN   UV4
         ERRDEFN   UV5
         ERRDEFN   UV6
         ERRDEFN   VA0
         ERRDEFN   VA1
         ERRDEFN   VA2
         ERRDEFN   VA3
         ERRDEFN   VA4
         ERRDEFN   VA5
         ERRDEFN   VA6
         ERRDEFN   VA7
         ERRDEFN   VA8
         ERRDEFN   VA9
         ERRDEFN   VAA
         ERRDEFN   SS4                                             V1L5
         ERRDEFN   CV2                                             V1L1
         ERRDEFN   IO8                                             V1L1
         ERRDEFN   EN2                                             V1L1
         ERRDEFN   UNL                                             V1L1
         ERRDEFN   IO9                                             V1L1
         ERRDEFN   DF3                                             V1L1
         ERRDEFN   KO9                                             V1L2
         ERRDEFN   KOA                                             V1L2
         ERRDEFN   SXB                                             V1L5
         ERRDEFN   EQ4                                             V1L5
         ERRDEFN   UNN                                             V1L5
         ERRDEFN   UNM                                             V1L5
         ERRDEFN   SV6                                             V1L5
         ERRDEFN   CP2                                             V1L5
         ERRDEFN   SRB                                             V1L5
         AIF       ('&RDONLY' EQ 'OMIT').OMITRO                    V1L5
         ERRDEFN   UNP                                             V1L5
.OMITRO  ANOP                                                      V1L6
.*   INSTALLATIONS MAY ADD CODES HERE
         AIF       ('&STR' NE 'USE').EDSTR1                        ST1
         ERRDEFN   SP0                                             ST1
         ERRDEFN   SP1                                             ST1
         ERRDEFN   SP2                                             ST1
         ERRDEFN   SP3                                             ST1
         ERRDEFN   SP4                                             ST1
         ERRDEFN   SP5                                             ST1
         ERRDEFN   SP6                                             ST1
         ERRDEFN   SP7                                             ST1
         ERRDEFN   SP8                                             ST1
         ERRDEFN   SP9                                             ST1
         ERRDEFN   SPA                                             ST1
         ERRDEFN   SPB                                             ST1
         ERRDEFN   SPC                                             ST1
         ERRDEFN   SPD                                             ST1
         ERRDEFN   SPE                                             ST1
         ERRDEFN   SPF                                             ST1
         ERRDEFN   SPG                                             ST1
         ERRDEFN   SPH                                             ST1
         ERRDEFN   SPI                                             ST1
         ERRDEFN   SPJ                                             ST1
         ERRDEFN   SPK                                             ST1
         ERRDEFN   SPL                                             ST1
.EDSTR1  ANOP                                                      ST1
         AIF       ('&WHOSIT' EQ 'WATFIV').ERREND                  UOW
         ERRDEFN   AC0                                             UOW
         ERRDEFN   AC1                                             UOW
         ERRDEFN   AC2                                             UOW
         ERRDEFN   AC3                                             UOW
         ERRDEFN   AC4                                             UOW
.ERREND  ANOP                                                      UOW
         ERRDEFN   UNQ                                             V1L5
         MEND
./ ADD NAME=FCALL    0100-80001-80001-1200-00017-00017-00000-MACLIB  00
         MACRO
&NAME    FCALL     &FUNC,&ARG
         LCLA      &N,&M
&N       SETA      N'&SYSLIST-1
&M       SETA      1
         CNOP      2,4
&NAME    LA        R14,*+14+&N*4
         L         R15,=A(&FUNC(1))
         BALR      R1,R15
.FC1     AIF       (&N EQ 0).FC2
&M       SETA      &M+1
         ARG       &SYSLIST(&M,1),&SYSLIST(&M,2)
&N       SETA      &N-1
         AGO       .FC1
.FC2     ANOP
         LARG      &FUNC(1),&FUNC(2)
         MEND
./ ADD NAME=FENT     0100-80001-80001-1200-00027-00027-00000-MACLIB  00
         MACRO
&NAME    FENT      &ARGS
         LCLA      &N,&M
&N       SETA      N'&SYSLIST-1
&M       SETA      1
         CNOP      0,4
&NAME    STM       R14,R12,12(R13)
         BAL       R11,XENTSPEC
         USING     *,R11
         DC        H'0'
         DC        CL6'&NAME'
         DC    V(XS@VE&SYSLIST(&N+1))                              V1L4
.FC1     AIF       (&N EQ 0).FC2
         ARG       &SYSLIST(&M,1),&SYSLIST(&M,2)
&M       SETA      &M+1
&N       SETA      &N-1
         AGO       .FC1
.FC2     ANOP
         LARG      &NAME,&SYSLIST(1,2)
&N       SETA      N'&SYSLIST-1
.FC3     AIF       (&N EQ 0).FC4
         CLC       XUNDEF(L&SYSLIST(&N,2)),&SYSLIST(&N,1)
         EX        R0,XNOPDEFN
&N       SETA      &N-1
         AGO       .FC3
.FC4     ANOP
         MEND
./ ADD NAME=FENTZ    0100-80001-80001-1200-00007-00007-00000-MACLIB  00
         MACRO
&NAME    FENTZ
         USING     *,R15
&NAME    BAL   R15,*+10                                            V1L4
         USING     *,R15
         DC        CL6'&NAME'
         MEND
./ ADD NAME=FLIST    0100-80001-80001-1200-00015-00015-00000-MACLIB  00
         MACRO
&NAME    FLIST     &FN,&MODE
         GBLC      &STATUS,&TEST
         LCLC      &TN
&TN      SETC      '&FN'.'     '
&TN      SETC      '&TN'(1,6)
         AIF       ('&TN' GT '&TEST').OK
         MNOTE     '*** FLIST CARD OUT OF ORDER - &FN IGNORED ***'
         AGO       .END
.OK      ANOP
&TEST    SETC      '&TN'
         STATUS    &FN
         AIF       ('&STATUS'(1,4) NE 'CORE').END
         ADDLIST   &FN,&MODE
.END     MEND
./ ADD NAME=FREESYM  0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&NAME    FREESYM   &N
&NAME    LA        R6,&N.(,R6)
         MEND
./ ADD NAME=FRET     0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&NAME    FRET
&NAME    B         XFRET
         MEND
./ ADD NAME=FUNCDEFN 0100-80001-80001-1200-00111-00111-00000-MACLIB  00
         MACRO
         FUNCDEFN  &CORE=,&OMIT=
         GBLA      &IND1,&IND2,&FJ,&FDYN(255)
         GBLC      &FSTATUS(255),&FDYA(255)
         GBLC      &PROFILE                                        V1L5
         LCLA      &L,&J,&K
&FJ      SETA      0
         FUNDEF    DSIN,2,CDEXP,0,CDSIN,0
         FUNDEF    DATAN,1,CDLOG,0
         FUNDEF    DSQRT,3,CDABS,0,CDSQRT,0,DARSIN,0               V1L4
         FUNDEF    UNIT@,1,FIOCS#,0
         FUNDEF    UNIT@,1,DIOCS#,0
         FUNDEF    IBCOM#,1,FIOCS#,0
         FUNDEF    IBCOM#,1,DIOCS#,0
&FJ      SETA      &FJ+1
&FDYN(&FJ)   SETA  0
&IND1    SETA      1
&IND2    SETA      1
         FUNCSSET  ABS
         FUNCSSET  AIMAG
         FUNCSSET  AINT
         FUNCSSET  AMAX0,AMIN0
         FUNCSSET  AMIN1,AMAX1
         FUNCSSET  AMOD
         FUNCSSET  AND,OR,EOR,COMPL
         FUNCSSET  CDABS,CABS
         FUNCSSET  CDEXP,CEXP
         FUNCSSET  CDLOG,CLOG                                      V1L4
         FUNCSSET  CDSIN,CDCOS,CSIN,CCOS
         FUNCSSET  CDSQRT,CSQRT
         FUNCSSET  CMPLX
         FUNCSSET  CONJG
         FUNCSSET  DABS
         FUNCSSET  DARSIN,DARCOS,ARSIN,ARCOS
         FUNCSSET  DATAN,DATAN2,ATAN,ATAN2
         FUNCSSET  DBLE
         FUNCSSET  DCMPLX
         FUNCSSET  DCONJG
         FUNCSSET  DERF,DERFC,ERF,ERFC
         FUNCSSET  DFLOAT
         FUNCSSET  DGAMMA,DLGAMA,GAMMA,ALGAMA
         FUNCSSET  DIM
         FUNCSSET  DIOCS#                                          V1L4
         FUNCSSET  DMAX1,DMIN1
         FUNCSSET  DMOD
         FUNCSSET  DSIN,DCOS,SIN,COS
         FUNCSSET  DSINH,DCOSH,SINH,COSH
         FUNCSSET  DSQRT,SQRT
         FUNCSSET  DTAN,DCOTAN,TAN,COTAN
         FUNCSSET  DTANH,TANH
         FUNCSSET  DVCHK,OVERFL
         FUNCSSET  EXIT
         FUNCSSET  FIOCS#
         FUNCSSET  FLOAT
         FUNCSSET  IABS
         FUNCSSET  IBCOM#,IHCER@
         FUNCSSET  IDIM
         FUNCSSET  IFIX,HFIX,INT,IDINT
         FUNCSSET  ISIGN
         FUNCSSET  MAX0,MIN0
         FUNCSSET  MIN1,MAX1
         FUNCSSET  MOD
         AIF       ('&PROFILE' EQ 'OMIT').NOPFSET                  V1L5
         FUNCSSET  PROF@                                           V1L5
.NOPFSET ANOP                                                      V1L5
         FUNCSSET  REAL
         FUNCSSET  SIGN,DSIGN
         FUNCSSET  SLITE,SLITET
         FUNCSSET  SNGL
         FUNCSSET  STOP#
         FUNCSSET  TRAPS
         FUNCSSET  UNIT@
&FSTATUS(&IND1)    SETC    'CORERES'
.*       THIS LOOP IS THE FUNCCORE SECTION
&L       SETA      0
.LOOPC   AIF       (&L GE N'&CORE).ENDCORE
&L       SETA      &L+1
.*       FIND NAME IN (OR AT END OF ) FUNCTION DEPENDENCY TABLE
&FDYA(&FJ) SETC    '&CORE(&L)'
&J       SETA      0
.C1      ANOP
&J       SETA      &J+1
         AIF       ('&FDYA(&J)' NE '&CORE(&L)').C1
.*     SET STATUS OF NAME AND ROUTINES WHICH IT CALLS TO 'CORE'
&K       SETA      1
.C2      AIF       (&FDYN(&K) LT (&J-&K)).C3
         SETSTAT   &FDYA(&K),CORE
.C3      ANOP
&K       SETA      &K+1
         AIF       (&K LE &J).C2
         AIF       (&J NE &FJ).C1
         AGO       .LOOPC
.ENDCORE ANOP
.*       THIS IS THE FUNCOMIT SECTION
&L       SETA      0
.LOOP    AIF       (&L GE N'&OMIT).END
&L       SETA      &L+1
.*       FIND NAME IN (OR AT END OF) FUNCTION DEPENDENCY TABLE
&FDYA(&FJ) SETC    '&OMIT(&L)'
&J       SETA      0
.L1      ANOP
&J       SETA      &J+1
         AIF       ('&FDYA(&J)' NE '&OMIT(&L)').L1
.*       NOW SET STATUS OF GROUPS DEPENDING ON NAME TO 'OMIT'
&K       SETA      &J+&FDYN(&J)
.L2      ANOP
         SETSTAT   &FDYA(&J),OMIT
&J       SETA      &J+1
         AIF       (&J LE &K).L2
         AGO       .LOOP
.END     MEND
./ ADD NAME=FUNCDEFS 0100-80001-80001-1200-00019-00019-00000-MACLIB  00
         MACRO
         FUNCDEFS
**   THESE SYMBOLS ARE REFERRED TO BY FUNCREFS.
**   THEY ARE DEFINED HERE TO AVOID ASSEMBLY ERRORS.
MAXNH    EQU       X'D0'               USED BY                     V1L4
MAXNL    EQU       X'B0'                 MAX, MIN ROUTINES         V1L4
XAMNRST  DS        0D
XENTFN   EQU       *
XFLIT    EQU       *
XATRACEB       EQU    *
XHELPS   EQU       *
XAXERRP  EQU       *
XERRUV5  EQU       *
XERRUV6  EQU       *
XDNTRZSW EQU       *                                               V1L4
XTRADDR  EQU       *                                               V1L4
XISNPATC EQU       *                                               V1L4
XISNVM   EQU       *                                               VM1
         MEND
./ ADD NAME=FUNCREFS 0100-80001-80001-1200-00159-00159-00000-MACLIB  00
         MACRO
         FUNCREFS
         GBLC      &OPSYS,&DECK                                    DOS3
         GBLA      &UNDEF                                          V1L2
         GBLB      &DVSD,&NDVSD                                    DVS1
         USING     START,RX
START    DC        0D'0'
         SPACE
***********************************************************************
*****    ALMOST EVERY EXECUTABLE INSTRUCTION (EXCEPTIONS:STOP,CONTINUE)
*****    HAS OBJECT CODE WHICH BEGINS WITH:  BALR R11,R12
*****                                        DC   AL2(ISN)
*****    THIS SERVES THREE PURPOSES: R11 BECOMES A BASE REGISTER
*****                                    FOR THE STATEMENT
*****                                WE CAN READILY FIND THE ISN
*****                                EXECUTION TIME EXCEEDED IS CAUGHT
*****                                    FAIRLY SIMPLY
***********************************************************************
         SPACE
* NOTE: IF WE GET AN INTERVAL TIMER INTERRUPT, THE BRANCH IS CHANGED
* TO A NOP INSTRUCTION AND WE FALL THRU TO GIVE AN INTERVAL TIMER
* OVERFLOW ERROR
         SPACE
* NOTE: RX MUST POINT DIRECTLY AT THIS ROUTINE IN ORDER THAT WE MAY
* USE A BALR INSTRUCTION TO GET TO IT.
         SPACE
         AIF       ('&OPSYS' NE 'DOS').QUERTI                      V1L5
XISNRTN  B         TTESTMR             TEST IF TIME EXPIRED        DOS3
         AGO       .QUERTJ                                         V1L5
.QUERTI  ANOP                                                      V1L5
XISNRTN  B         XISNPATC            BRANCH TO PATCH AREA        V1L2
.QUERTJ  ANOP                                                      V1L5
         $ERROR    (TRAZ,KO,6)                                     V1L5
XISNSW   EQU       XISNRTN
***********************************************************************
*****   THE FOLLOWING PATCH AREA IS SUPPLIED FOR THE POSSIBLE ADDITION
*****   OF A FACILITY TO CANCEL A JOB WITHOUT CANCELLING THE BATCH.
*****   HERE'S HOW IT MIGHT BE DONE: DO A WTOR AT BATCH INITIALIZATION.
*****   THEN TEST IT'S ECB EACH TIME WE GET TO XISNRTN. IF THE ECB IS
*****   POSTED, BOOT THE JOB OFF, GO TO XSTOP TO TERMINATE, THEN REDO
*****   THE WTOR AND CONTINUE WITH THE NEXT JOB IN THE BATCH.
*****   THUS XISNRTN WOULD LOOK AS FOLLOWS:
*****   XISNRTN TM  ECB,X'40'          TEST COMPLETION BIT
*****           BZ  XISNSW
*****           L   R15,ADCON          OFF TO RESET WTOR
*****           BR  R15
*****           DC  H'0'  PADDING
*****    ECB    DC  F'0'
*****    ADCON  DC  A(KICKOFF ROUTINE)
*****    XISNSW B   ZR11+2   THIS IS THE RETURN TO OBJECT PROGRAM
*****           ERROR  (TRAZ,KO,6)     UNLESS THE TIMER SWITCH IS SET
***********************************************************************
         DS        6F
         AIF                  (&NDVSD).JNODOS                      DVS1
         ORG       *-24                                            DOS2
JTIMOUT  DS        F                                               DOS2
         ORG       ,                                               DOS2
.JNODOS  ANOP                                                      DOS2
XUNDEF   DC        0D'0',16X'&UNDEF'                               V1L2
XCMT1    DC        D'0'                WORK
XCMT2    DC        D'0'                WORK
*./DELETE SEQ1=00490000,SEQ2=00520000                              V1L5
XFLIT3   DC        X'4E00000000000000' UN-NORM ZERO FOR SCALING    V1L4
*./DELETE SEQ1=00560000,SEQ2=00590000                              V1L5
XFLTONE  DC    X'4110000000000000'           TOGETHER
XEXPLIT  EQU      XFLTONE
XBADARG  LA        R1,4(,R1)           CHCKA(2) MACRO ENTERS HERE  V1L4
         USING     CALLMODE,R1                                     V1L4
         TM        CALLMODE,B'11000000'  OR HERE                   V1L4
         BNZ       XERRSR41            BIF INVALID ARG             V1L4
         TM        CALLMODE,B'00110000'                            V1L4
         BNM       XERRSR41                                        V1L4
         $FREE     R1                                              V1L4
         BM        XERRSR71            BIF WRONG NO. OF ARGS       V1L4
         USING     CALLMODE,R1                                     V1L4
XVLARGS  TM        CALLMODE,B'11000000'  SPECIAL ENTRY FOR MAX/MIN'S L4
         BNZ       XERRSR41            BIF INVALID ARG             V1L4
         TM        CALLMODE,B'00110000'                            V1L4
         BNM       XERRSR41                                        V1L4
         $FREE     R1                                              V1L4
         BM        XERRSR21            BIF WRONG MODE/TYPE         V1L4
         DS        H                   ./ DELETE                   V1L4
XSTOP#   DC        H'0'                'N' OF STOP N SAVED BY STOP#V1L4
KF4      DC        F'4'
*****  TRAPS ASSUMES NEXT 5 FIELDS ARE STORED IN ORDER SHOWN
XFXOFLOW DC        F'1'                1
XEXOFLOW DC        F'1'                2
XEXUFLOW DC        F'1'                3
XFXDVCNT DC        F'1'                4
XFLDVCNT DC        F'1'                5
         SPACE 1
*./DELETE SEQ1=00770000,SEQ2=00780000                              V1L5
XOVRFLSW DC        H'0'
XDVCHKSW DC        H'0'
***********************************************************************
*        END OF EXECUTION,GO TO MAINREST  TO DO JOB ACCOUNTING
XSTOP    L         RP,XAMNRST
         BR        RP
***********************************************************************
*          ENTRY ROUTINE FOR LIBRARY FUNCTIONS
*                AVOIDS TURNING ON THE RECURSION BIT
         USING     ENTRUSE,RP
XENTSPEC LR        R15,R13
         L         R13,ENTRSAVE
         ST        R11,ZR13+72
         B         XENTFN
         $FREE     RP                                              V1L5
* IN-CORE FUNCTIONS RETURN ROUTINE
XFRET    L         R13,ZSVBACK
         LM        R14,R12,ZSV14
         BR        RDONE               RETURN;
XFENT99  LA        R1,4(,R1)           XFENT99  ENTERED HERE
         LA        R1,4(,R1)           OR HERE
         USING     CALLUSE,R1
         TM        CALLMODE,B'11000000'
         BNZ       XERRSR71
         TM        CALLMODE,B'00110000'
         BNM       XERRSR71
         $FREE     R1                                              V1L5
XERRSR21 $ERROR    (TRAZ,SR,2,VARR15)                              V1L5
XERRSR71 $ERROR    (TRAZ,SR,5,VARR15)                              V1L5
XERRSR41 $ERROR    (TRAZ,SR,4,VARR15)                              V1L5
*./DELETE SEQ1=01090000,SEQ2=01090000                              V1L5
XFLOAT10 LPR       R2,R1               FLOATS R1 TO F0
         N         R1,XFLIT
         STM       R1,R2,XCMT1
         OI        XCMT1,X'4E'
         SDR       F0,F0
         AD        F0,XCMT1
         BR        R14
XFLOAT30 LPR       R4,R3               FLOATS R3 TO F0
         N         R3,XFLIT
         STM       R3,R4,XCMT1
         OI        XCMT1,X'4E'
         SDR       F0,F0
         AD        F0,XCMT1
         BR        R14
***********************************************************************
*****    TRACEBACK ROUTINE REACHED BY THESE EXITS                 *****
XRETRACE L         R13,ZSVBACK
XRETR1   L         R11,ZSV11
XTRACEBK L         R15,XATRACEB
         BR        R15
***********************************************************************
*****   AN ENTRY TO ERROR EDITOR FOR IN-LINE CODE,SAVE REGISTERS HERE.
XERRENT3 STM       R0,R15,XHELPS
         LR        R1,R14
         L         R11,XAXERRP
         BALR      R14,R11
         LM        R0,R15,XHELPS
         TM        ZR14,B'10000000'    TEST IF 2-BYTE ERROR CODE
         BZ        ZR14+2              2 BYTE
         B         ZR14+4              4 BYTE
***********************************************************************
*****   THE NEXT TWO INSTRUCTIONS ARE 'EX'ECUTED BY LIBRARY ROUTINES. *
*****   THEY ARE USED TO SCREEN UNDEFINED ARGUMENTS FOR RUN=CHECK.    *
XNOPDEFZ NOP       XERRUV5
XNOPDEFN NOP       XERRUV6
         MEND
./ ADD NAME=FUNCSSET 0100-80001-80001-1200-00018-00018-00000-MACLIB  00
         MACRO
         FUNCSSET
         GBLC      &FNAME(255)
         GBLC      &FSTATUS(255)
         GBLA      &IND1,&IND2,&FNUM(255)
         LCLA      &NUM
         ACTR      100
&NUM     SETA      1
&FNUM(&IND2)       SETA   N'&SYSLIST
&IND2    SETA      &IND2+1
&FNUM(&IND2) SETA  0
.LOOP    ANOP
&FNAME(&IND1) SETC '&SYSLIST(&NUM)'
&FSTATUS(&IND1)  SETC   'DISK'
&NUM     SETA      &NUM+1
&IND1    SETA      &IND1+1
         AIF       (&NUM LE N'&SYSLIST).LOOP
         MEND
./ ADD NAME=FUNDEF   0100-80001-80001-1200-00015-00015-00000-MACLIB  00
         MACRO
&NAME    FUNDEF    &ARGE
         GBLC      &FDYA(255)
         GBLA      &FDYN(255),&FJ
         LCLA      &I
&I       SETA      1
.BEGIN   AIF       (&I GT N'&SYSLIST).END
&FJ      SETA      &FJ+1
&FDYA(&FJ) SETC    '&SYSLIST(&I)'
&FDYN(&FJ) SETA    &SYSLIST(&I+1)
&I       SETA      &I+2
         AGO       .BEGIN
.END     ANOP
&FDYA(&FJ+1) SETC  ' '
         MEND
./ ADD NAME=FVTABLE  0100-80001-80001-1200-00021-00021-00000-MACLIB  00
         MACRO
&ADDR    FVTABLE
         GBLA      &CLASS1(255),&CLASS1E
         LCLA      &I,&T(8),&J
         LCLC      &TEMP
&TEMP    SETC      '&ADDR'
&I       SETA      0
.TABLE10 ANOP
&I       SETA      &I+1
&J       SETA      0
&T(8)    SETA      &CLASS1E
.TABLE20 ANOP
&J       SETA      &J+1
&T(&J)   SETA      &CLASS1(&I*8-8+&J)
         AIF       (&J LT (8-&I/32)).TABLE20
&J       SETA      &I*8-8
&TEMP    DC        (&J-&J)F'0',AL1(&T(1),&T(2),&T(3),&T(4),&T(5),&T(6),X
               &T(7),&T(8))
&TEMP    SETC      ''
         AIF       (&I LT 32).TABLE10
         MEND
./ ADD NAME=GENCC    0100-80001-80001-1200-00021-00021-00000-MACLIB  00
         MACRO
         GENCC
         GBLC      &CCTAB1(255)
         GBLA      &CCTAB2(255)
     LCLA     &I
         LCLC      &AMP
&AMP     SETC      '&&'
&I       SETA      1
.LOOP1   AIF       ('&CCTAB1(&I)' NE '&AMP'(1,1)).LOOP
         DC        C'&&'
         DC      C'+'
         AGO       .LOOP2
.LOOP    DC        C'&CCTAB1(&I)'
         DC      C'&CCTAB1(&I)'
.LOOP2   DC        AL1(&CCTAB2(&I))
         AIF     ('&CCTAB1(&I+1)' EQ '$').END
&I       SETA      &I+1
         AGO       .LOOP1
.END     ANOP
ENDCC    DC      C'  ',AL1(1)
         MEND
./ ADD NAME=GENERR2  0100-80001-80001-1200-00016-00016-00000-MACLIB  00
         MACRO
&LBL     GENERR2   &ORGLABL=
         GBLC  &ERROPT,&CORERRS(255),&MAXERR,&MINERR
         GBLA  &ERCORI
         LCLA  &I
         AIF   ('&ERROPT' NE 'READ').END
         ORG   &ORGLABL+&MAXERR-&MINERR+1
         DS        0H                  ALIGN FOLLOWING AL2'S
EMINERR  DC    AL2(&MINERR)        LEAST IN-CORE ERROR TEXT
EMAXERR  DC    AL2(&MAXERR)        GREATEST IN-CORE ERROR TEXT
&LBL     DS    0H
.LOOP    ANOP
&I       SETA  &I+1
&CORERRS(&I).TAB2 DC AL2(&CORERRS(&I).TEXT-1-ERRTEXT)
         AIF   (&I LT &ERCORI).LOOP
.END     MEND
./ ADD NAME=GETSYM   0100-80001-80001-1200-00015-00015-00000-MACLIB  00
         MACRO
&NAME    GETSYM    &N,&CHECK
&NAME    DC        0H'0'
         AIF       (T'&N EQ 'O').A1
         S         R6,KF&N
.A1      AIF       (T'&CHECK NE 'O').A2
         C         R6,XOBJECT
         BL        CERRMO2
         MEXIT
.A2      AIF       ('&CHECK' NE 'CHECK').A3
         BAL       R14,CGETSYM
         MEXIT
.A3      AIF       ('&CHECK' EQ 'NOCHECK').END
         MNOTE     '*******  INVALID GETSYM MACRO  *******'
.END     MEND
./ ADD NAME=HOLTAB   0100-80001-80001-1200-00018-00018-00000-MACLIB  00
         MACRO
&NAME    HOLTAB
         LCLA      &HOL1,&HOL2
.HOL1    ANOP
&HOL1    SETA      1
.HOL2    ANOP
HOL&HOL1.R&HOL2    EQU          16*R&HOL2+&HOL1
&HOL1    SETA      &HOL1+1
         AIF       (&HOL1 NE 17).HOL2
&HOL2    SETA      &HOL2+1
         AIF       (&HOL2 NE 3).HOL1
HOL01R1  EQU       HOL1R1
HOL05R1  EQU       HOL5R1
UNEX     EQU       HOL16R2+1
INVAL    EQU       UNEX+1
NEAR     EQU       INVAL+1
UNIT     EQU       NEAR+1
         MEND
./ ADD NAME=IF       0100-80001-80001-1200-00021-00021-00000-MACLIB  00
         MACRO
&A       IF        &B,&C
         GBLA      &IF#
         LCLA      &D
&IF#     SETA      &IF#+1
         AIF       ('&C'EQ'THEN').A1
&A       IFXXXXXX  IF,&B,&C
         MEXIT
.A1      ANOP
&A       IFXXXXXX  NOT,&B,$&SYSNDX
&D       SETA      3
.A6      ANOP
         AIF       ('&SYSLIST(&D+1)'EQ'').A5
         AIF       ('&SYSLIST(&D+1)'(1,1)NE'(').A5
         THENXXXX  &SYSLIST(&D)
&D       SETA      &D+1
         AGO       .A6
.A5      ANOP
         THENXXXX  &SYSLIST(&D),&SYSLIST(&D+1)
$&SYSNDX DC        0H'0'
         MEND
./ ADD NAME=IFALL    0100-80001-80001-1200-00032-00032-00000-MACLIB  00
         MACRO
&A       IFALL
         GBLA      &IFALL#
         LCLA      &B
&IFALL#  SETA      &IFALL#+1
         AIF       ('&A'EQ'').A1
&A       DC        0H'0'
.A1      ANOP
&B       SETA      1
.A3      ANOP
         AIF       ('&SYSLIST(&B+1)'(1,1)NE'(').A2
         IFXXXXXX  NOT,&SYSLIST(&B),$&SYSNDX
&B       SETA      &B+1
         AGO       .A3
.A2      ANOP
         AIF       ('&SYSLIST(&B+1)'EQ'THEN').A5
         IFXXXXXX  IF,&SYSLIST(&B),&SYSLIST(&B+1)
         AGO       .A4
.A5      ANOP
         IFXXXXXX  NOT,&SYSLIST(&B),$&SYSNDX
&B       SETA      &B+2
.A7      ANOP
         AIF       ('&SYSLIST(&B+1)'EQ'').A6
         AIF       ('&SYSLIST(&B+1)'(1,1)NE'(').A6
         THENXXXX  &SYSLIST(&B)
&B       SETA      &B+1
         AGO       .A7
.A6      ANOP
         THENXXXX  &SYSLIST(&B),&SYSLIST(&B+1)
.A4      ANOP
$&SYSNDX DC        0H'0'
         MEND
./ ADD NAME=IFANY    0100-80001-80001-1200-00044-00044-00000-MACLIB  00
         MACRO
&A       IFANY
         GBLA      &IFANY#
         LCLA      &B,&C
         ACTR      100
&IFANY#  SETA      &IFANY#+1
         AIF       ('&A'EQ'').A1
&A       DC        0H'0'
.A1      ANOP
&C       SETA      3
.A11     ANOP
         AIF       ('&SYSLIST(&C)'(1,1)NE'(').A10
&C       SETA      &C+1
         AGO       .A11
.A10     ANOP
&B       SETA      1
         AIF       ('&SYSLIST(&C)'EQ'THEN').A12
.A14     ANOP
         IFXXXXXX  IF,&SYSLIST(&B),&SYSLIST(&C)
         AIF       (&B EQ &C-1).A13
&B       SETA      &B+1
         AGO       .A14
.A13     ANOP
         MEXIT
.A12     ANOP
         IFXXXXXX  IF,&SYSLIST(&B),$A&SYSNDX
         AIF       (&B EQ &C-2).A15
&B       SETA      &B+1
         AGO       .A12
.A15     ANOP
&B       SETA      &B+1
         IFXXXXXX  NOT,&SYSLIST(&B),$&SYSNDX
$A&SYSNDX DC       0H'0'
&B       SETA      &B+2
.A7      ANOP
         AIF       ('&SYSLIST(&B+1)'EQ'').A6
         AIF       ('&SYSLIST(&B+1)'(1,1)NE'(').A6
         THENXXXX  &SYSLIST(&B)
&B       SETA      &B+1
         AGO       .A7
.A6      ANOP
         THENXXXX  &SYSLIST(&B),&SYSLIST(&B+1)
$&SYSNDX DC        0H'0'
         MEND
./ ADD NAME=IFNALL   0100-80001-80001-1200-00044-00044-00000-MACLIB  00
         MACRO
&A       IFNALL
         GBLA      &IFNALL#
         LCLA      &B,&C
         ACTR      100
&IFNALL# SETA      &IFNALL#+1
         AIF       ('&A'EQ'').A1
&A       DC        0H'0'
.A1      ANOP
&C       SETA      3
.A10     ANOP
         AIF       ('&SYSLIST(&C)'(1,1)NE'(').A11
&C       SETA      &C+1
         AGO       .A10
.A11     ANOP
&B       SETA      1
         AIF       ('&SYSLIST(&C)'EQ'THEN').A12
.A14     ANOP
         IFXXXXXX  NOT,&SYSLIST(&B),&SYSLIST(&C)
         AIF       (&B EQ &C-1).A13
&B       SETA      &B+1
         AGO       .A14
.A13     ANOP
         MEXIT
.A12     ANOP
         IFXXXXXX  NOT,&SYSLIST(&B),$A&SYSNDX
         AIF       (&B EQ &C-2).A20
&B       SETA      &B+1
         AGO       .A12
.A20     ANOP
&B       SETA      &B+1
         IFXXXXXX  IF,&SYSLIST(&B),$&SYSNDX
$A&SYSNDX DC       0H'0'
&B       SETA      &B+2
.A7      ANOP
         AIF       ('&SYSLIST(&B+1)'EQ'').A6
         AIF       ('&SYSLIST(&B+1)'(1,1)NE'(').A6
         THENXXXX  &SYSLIST(&B)
&B       SETA      &B+1
         AGO       .A7
.A6      ANOP
         THENXXXX  &SYSLIST(&B),&SYSLIST(&B+1)
$&SYSNDX DC        0H'0'
         MEND
./ ADD NAME=IFNONE   0100-80001-80001-1200-00031-00031-00000-MACLIB  00
         MACRO
&A       IFNONE
         GBLA      &IFNONE#
         LCLA      &B
&IFNONE# SETA      &IFNONE#+1
         AIF       ('&A'EQ'').A1
&A       DC        0H'0'
.A1      ANOP
&B       SETA      1
.A3      ANOP
         AIF       ('&SYSLIST(&B+1)'(1,1)NE'(').A2
         IFXXXXXX  IF,&SYSLIST(&B),$&SYSNDX
&B       SETA      &B+1
         AGO       .A3
.A2      ANOP
         AIF       ('&SYSLIST(&B+1)'EQ'THEN').A4
         IFXXXXXX  NOT,&SYSLIST(&B),&SYSLIST(&B+1)
         AGO       .A5
.A4      IFXXXXXX  IF,&SYSLIST(&B),$&SYSNDX
&B       SETA      &B+2
.A7      ANOP
         AIF       ('&SYSLIST(&B+1)'EQ'').A6
         AIF       ('&SYSLIST(&B+1)'(1,1)NE'(').A6
         THENXXXX  &SYSLIST(&B)
&B       SETA      &B+1
         AGO       .A7
.A6      ANOP
         THENXXXX  &SYSLIST(&B),&SYSLIST(&B+1)
.A5      ANOP
$&SYSNDX DC        0H'0'
         MEND
./ ADD NAME=IFNOT    0100-80001-80001-1200-00020-00020-00000-MACLIB  00
         MACRO
&A       IFNOT     &B,&C
         GBLA      &IFNOT#
         LCLA      &D
&IFNOT#  SETA      &IFNOT#+1
         AIF       ('&C'EQ'THEN').A1
&A       IFXXXXXX  NOT,&B,&C
         MEXIT
.A1      ANOP
&A       IFXXXXXX  IF,&B,$&SYSNDX
&D       SETA      3
.A6      AIF       ('&SYSLIST(&D+1)'EQ'').A5
         AIF       ('&SYSLIST(&D+1)'(1,1)NE'(').A5
         THENXXXX  &SYSLIST(&D)
&D       SETA      &D+1
         AGO       .A6
.A5      ANOP
         THENXXXX  &SYSLIST(&D),&SYSLIST(&D+1)
$&SYSNDX DC        0H'0'
         MEND
./ ADD NAME=IFXXXXXX 0100-80001-80001-1200-00165-00165-00000-MACLIB  00
         MACRO
&A       IFXXXXXX  &B,&C,&D
         GBLA      &IFXXXX#
         LCLA      &X
         LCLC      &Y
&IFXXXX# SETA      &IFXXXX#+1
         AIF       ('&C(2)'EQ'ON').A
         AIF       ('&C(2)'EQ'OFF').A
         AIF       ('&C(2)'EQ'NON').A
         AIF       ('&C(2)'EQ'NOFF').A
         AIF       ('&C(2)'EQ'EQ').A1
         AIF       ('&C(2)'EQ'NE').A1
         AIF       ('&C(2)'EQ'GE').A1
         AIF       ('&C(2)'EQ'LE').A1
         AIF       ('&C(2)'EQ'GT').A1
         AIF       ('&C(2)'EQ'LT').A1
         AIF       ('&C(2)'EQ'MIX').A2
         AIF       ('&C(2)'EQ'NMIX').A2
         AIF       ('&C(2)'EQ'VAR').VAR
         AIF       ('&C(2)'EQ'SVAR').SVAR
         AIF       ('&C(2)'EQ'DVAR').DVAR
         AIF       ('&C(2)'EQ'DIM').DIM
         AIF       ('&C(2)'EQ'PROG').PROG
         AIF       ('&C(2)'EQ'RTN').RTN
         AIF       ('&C(2)'EQ'FUNC').FUNC
         AIF       ('&C(2)'EQ'SUBR').SUBR
         AIF       ('&C(2)'EQ'NLST').NLST
         AIF       ('&C(2)'EQ'E').A1
         AIF       ('&C(2)'EQ'N').A1
         AIF       ('&C(2)'EQ'G').A1
         AIF       ('&C(2)'EQ'L').A1
         AIF       ('&C(2)'EQ'Z').A2
         AIF       ('&C(2)'EQ'O').A2
         AIF       ('&C(2)'EQ'M').A2
         AIF       ('&C(2)'EQ'NZ').A2
         AIF       ('&C(2)'EQ'NO').A2
         AIF       ('&C(2)'EQ'NM').A2
         AIF       ('&C(2)'EQ'EQU').A1
         AIF       ('&C(2)'EQ'NEQ').A1
         AIF       ('&C(2)'EQ'NG').A1
         AIF       ('&C(2)'EQ'NL').A1
         AIF       ('&C(2)'EQ'H').A1
         AIF       ('&C(2)'EQ'NH').A1
         AIF       ('&C(2)'EQ'LAST').LAST
         AIF       ('&C(2)'EQ'CONS').CONS
         AIF       ('&C(2)'EQ'NAME').NAME
         MNOTE     '***ERROR*** ILLEGAL ''IF'' OPERATION'
&A       DC        H'0'
         MEXIT
.VAR     ANOP
&A       TM        &C(1),B'10000000'
         AGO       .A3
.SVAR    AIF       ('&C(3)'EQ'').SVAR2
&A       CLI       &C(1),SIMV+&C(3)
         AIF       ('&D'EQ'DONE').SVAR3
         AIF       ('&D'EQ'LOOP').SVAR3
&X       SETA      1
.LKKA1   ANOP
&Y       SETC      '&X'
         AIF       ('&D' EQ 'R&Y').LKKA2
&X       SETA      &X+1
         AIF       ((&X LT 14) OR (&X EQ 15)).LKKA1
         BC        Z&B.EQ,&D
         MEXIT
.SVAR3   ANOP
         BCR       Z&B.EQ,R&D
         MEXIT
.LKKA2   BCR       Z&B.EQ,&D
         MEXIT
ZIFSVAR  EQU       ZIFOFF
ZNOTSVAR EQU       ZNOTOFF
.SVAR2   ANOP
&A       TM        &C(1),B'01110000'
         AGO       .A3
         MEXIT
.DVAR    AIF       ('&B' EQ 'NOT').NOTDVAR
&A       IFXXXXXX  NOT,(&C(1),VAR),$&SYSNDX
         IFXXXXXX  IF,(&C(1),DIM),&D
$&SYSNDX DC        0H'0'
         MEXIT
.NOTDVAR ANOP
&A       IFXXXXXX  NOT,(&C(1),VAR),&D
         IFXXXXXX  NOT,(&C(1),DIM),&D
         MEXIT
.DIM     ANOP
&A       TM        &C(1),B'01110000'
         AGO       .A3
.PROG    AIF       ('&B' EQ 'NOT').NOTPROG
&A       IFXXXXXX  IF,(&C(1),VAR),$&SYSNDX
         IFXXXXXX  IF,(&C(1),RTN),&D
$&SYSNDX DC        0H'0'
         MEXIT
.NOTPROG ANOP
&A       IFXXXXXX  IF,(&C(1),VAR),&D
         IFXXXXXX  NOT,(&C(1),RTN),&D
         MEXIT
.RTN     ANOP
&A       TM        &C(1),B'01000000'
         AGO       .A3
.FUNC    ANOP
&A       TM      &C(1),B'10010000'
         AGO       .A3
.SUBR    ANOP
&A       TM        &C(1),B'10100000'
         AGO       .A3
.LAST    AIF       ('&B' EQ 'NOT').NOTLAST
&A       IFXXXXXX  NOT,(&C(1),OFF,B'11000000'),$&SYSNDX
         IFXXXXXX  IF,(&C(1),MIX,B'00110000'),&D
$&SYSNDX DC        0H'0'
         MEXIT
.NOTLAST ANOP
&A       IFXXXXXX  NOT,(&C(1),OFF,B'11000000'),&D
         IFXXXXXX  NOT,(&C(1),MIX,B'00110000'),&D
         MEXIT
.CONS    ANOP
.NAME    ANOP
&A       TM        &C(1),B'10000000'
         AGO       .A3
.NLST    ANOP
&A       CLI       &C(1),B'00110001'
         AGO       .F
.A       AIF       ('&C(3)'NE'').A2
&A       TM        &C(1),B'10000000'
         AGO       .A3
.A2      ANOP
&A       TM        &C(1),&C(3)
         AGO       .A3
.A1      ANOP
&A       CLI       &C(1),&C(3)
.A3      ANOP
         AIF       ('&D'EQ'DONE').A4
         AIF       ('&D'EQ'LOOP').A4
&X       SETA      1
.LKKB1   ANOP
&Y       SETC      '&X'
         AIF       ('&D' EQ 'R&Y').LKKB2
&X       SETA      &X+1
         AIF       ((&X LT 14) OR (&X EQ 15)).LKKB1
         BC        Z&B&C(2),&D
         MEXIT
.A4      ANOP
         BCR       Z&B&C(2),R&D
         MEXIT
.LKKB2   BCR       Z&B&C(2),&D
         MEXIT
.F       ANOP
         AIF       ('&D'EQ'DONE').FF
         AIF       ('&D'EQ'LOOP').FF
&X       SETA      1
.LKKC1   ANOP
&Y       SETC      '&X'
         AIF       ('&D' EQ 'R&Y').LKKC2
&X       SETA      &X+1
         AIF       ((&X LT 14) OR (&X EQ 15)).LKKC1
         BC        Z&B&C(2),&D
$&SYSNDX DC        0H'0'
         MEXIT
.FF      ANOP
         BCR       Z&B&C(2),R&D
$&SYSNDX DC        0H'0'
         MEXIT
.LKKC2   ANOP
$&SYSNDX DC        0H'0'
         BCR       Z&B&C(2),&D
         MEND
./ ADD NAME=LARG     0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&NAME    LARG      &ARG,&MODE
         DC        AL1(FNARGTRM+&MODE),AL3(&ARG)                   V1L4
         MEND
./ ADD NAME=LINKTCP  0100-80001-80001-1200-00030-00030-00000-MACLIB  00
         MACRO
&ADDR    LINKTCP  &TCPPTR,&PARM=SAVE
         LCLA      &SAVESW,&DISP1(2),&DISP2(2)
         LCLC      &TEMP
&SAVESW  SETA      1
&DISP1(1) SETA     22
&DISP1(2) SETA     18
&DISP2(1) SETA     20
&DISP2(2) SETA     12
         AIF       ('&PARM' EQ 'SAVE').ADDR100
&SAVESW  SETA      2
.ADDR100 ANOP
         CNOP      2,4
&TEMP    SETC      '&ADDR'
         AIF       (&SAVESW EQ 2).ADDR200
&TEMP    STM       14,15,*+34
&TEMP    SETC      ''
.ADDR200 ANOP
&TEMP    LA        14,*+&DISP1(&SAVESW)
         L         15,4(0,14)
         MVC       0(4,15),0(14)
         AIF       (&SAVESW EQ 2).ADDR300
         LM        14,15,8(14)
.ADDR300 ANOP
         B         *+&DISP2(&SAVESW)
         DC        A(&TCPPTR)
         DC        V(TRTCPPTR)
         AIF       (&SAVESW EQ 2).END
         DS        2F
.END     MEND
./ ADD NAME=LOOKUP   0100-80001-80001-1200-00033-00033-00000-MACLIB  00
         MACRO
&LBL     LOOKUP    &RTN,&NEW,&OLD,&NAME=
         GBLA      &LOOKUP#
         LCLC      &RTNAM
&LOOKUP# SETA      &LOOKUP#+1
&RTNAM   SETC      'CLSYM'
         AIF       ('&RTN' EQ 'VARIABLE').L1
&RTNAM   SETC      'CLSTN'
         AIF       ('&RTN' EQ 'STATNUM').L1
&RTNAM   SETC      'COLCONST'
         AIF       ('&RTN' EQ 'CONSTANT').L1
&RTNAM   SETC      'COLINTGR'
         AIF       ('&RTN' EQ 'INTEGER').L1
&RTNAM   SETC      'CLLIB'
         AIF       ('&RTN' EQ 'GLBLVAR').L1
&RTNAM   SETC      'CONTEST'
         AIF       ('&RTN' EQ 'TESTCON').L1
&RTNAM   SETC      'CLPSTN'
         AIF       ('&RTN' EQ 'PSUDSTNO').L1
         AIF       ('&RTN' EQ 'SPCLNAME').L2
         MNOTE     'CHANGE THIS BLOODY MACRO INSTRUCTION'
         MEXIT
.L2      ANOP
&LBL     LA        R3,&NAME
         BAL       R14,CSPCLNMS
         AGO       .CHKOLD
.L1      ANOP
&LBL     BAL       R14,&RTNAM
.CHKOLD  AIF       (T'&OLD EQ 'O').NOLD
         BOLD      &OLD
.NOLD    AIF       (T'&NEW EQ 'O').NONEW
         BNEW      &NEW
.NONEW   MEND
./ ADD NAME=NOMACROS 0100-80001-80001-1200-00086-00086-00000-MACLIB  00
         MACRO
&NAME    NOMACROS  &A
         GBLA      &#MCALL
         GBLA      &CENT#
         GBLA      &ERROR#
         GBLA      &FREE#
         GBLA      &IF#
         GBLA      &IFANY#
         GBLA      &IFALL#
         GBLA      &IFNALL#
         GBLA      &IFNONE#
         GBLA      &IFNOT#
         GBLA      &IFXXXX#
         GBLA      &LINK2#
         GBLA      &LOOKUP#
         GBLA      &LQ#
         GBLA      &OFFSET#
         GBLA      &OUTPUT#
         GBLA      &Q#
         GBLA      &SETLNK#
         GBLA      &SETSTK#
         GBLA      &SNAPS#
         GBLA      &SLINK#
         GBLA      &SPRIN#
         GBLA      &STQ#
         GBLA      &THEN#
         GBLA      &THENXX#
         GBLA      &TVNAM#
         MNOTE   *,'CENT               &CENT#'
         MNOTE   *,'ERROR              &ERROR#'
         MNOTE   *,'FREE               &FREE#'
         MNOTE   *,'IF                 &IF#'
         MNOTE   *,'IFALL              &IFALL#'
         MNOTE   *,'IFANY              &IFANY#'
         MNOTE   *,'IFNALL             &IFNALL#'
         MNOTE   *,'IFNONE             &IFNONE#'
         MNOTE   *,'IFNOT              &IFNOT#'
         MNOTE   *,'IFXXXXXX           &IFXXXX#'
         MNOTE   *,'LINK2              &LINK2#'
         MNOTE   *,'LOOKUP             &LOOKUP#'
         MNOTE   *,'LQ                 &LQ#'
         MNOTE   *,'OFFSET             &OFFSET#'
         MNOTE   *,'OUTPUT             &OUTPUT#'
         MNOTE   *,'Q                  &Q#'
         MNOTE   *,'SETLINK            &SETLNK#'
         MNOTE   *,'SETSTACK           &SETSTK#'
         MNOTE   *,'SNAPS              &SNAPS#'
         MNOTE   *,'SLINK              &SLINK#'
         MNOTE   *,'SPRIN              &SPRIN#'
         MNOTE   *,'STQ                &STQ#'
         MNOTE   *,'THEN               &THEN#'
         MNOTE   *,'THENXXXX           &THENXX#'
.*       MNOTE   *,'TVNAM              &TVNAM#'
         AIF       ('&A' EQ 'STARTA').STARTA
&#MCALL  SETA      &SYSNDX-&#MCALL
         MNOTE     *,'THERE WERE &#MCALL MACRO CALLS IN THIS DECK'
         AGO       .B
.STARTA  ANOP
&#MCALL  SETA      &SYSNDX-&#MCALL-1
         MNOTE     *,'THERE WERE &#MCALL MACROS IN STARTA && COMMR'
.B       ANOP
&CENT#   SETA      0
&ERROR#  SETA      0
&FREE#   SETA      0
&IF#     SETA      0
&IFALL#  SETA      0
&IFANY#  SETA      0
&IFNALL# SETA      0
&IFNONE# SETA      0
&IFNOT#  SETA      0
&IFXXXX# SETA      0
&LOOKUP# SETA      0
&LQ#     SETA      0
&OFFSET# SETA      0
&OUTPUT# SETA      0
&Q#      SETA      0
&SETLNK# SETA      0
&SETSTK# SETA      0
&SLINK#  SETA      0
&SNAPS#  SETA      0
&SPRIN#  SETA      0
&STQ#    SETA      0
&THEN#   SETA      0
&THENXX# SETA      0
&TVNAM#  SETA      0
         MEND
./ ADD NAME=NOT      0100-80001-80001-1200-00019-00019-00000-MACLIB  00
         MACRO
&A       NOT       &B,&C
         LCLA      &D
         AIF       ('&C'EQ'THEN').A1
&A       IFXXXXXX  NOT,&B,&C
         MEXIT
.A1      ANOP
&A       IFXXXXXX  IF,&B,$&SYSNDX
&D       SETA      3
.A6      ANOP
         AIF       ('&SYSLIST(&D+1)'EQ'').A5
         AIF       ('&SYSLIST(&D+1)'(1,1)NE'(').A5
         THENXXXX  &SYSLIST(&D)
&D       SETA      &D+1
         AGO       .A6
.A5      ANOP
         THENXXXX  &SYSLIST(&D),&SYSLIST(&D+1)
$&SYSNDX DC        0H'0'
         MEND
./ ADD NAME=OFFSET   0100-80001-80001-1200-00114-00114-00000-MACLIB  00
         MACRO
&A       OFFSET    &B,&C,&D,&E
         GBLC      &OFFSET
         GBLA      &OFFSET#
&OFFSET# SETA      &OFFSET#+1
         AIF       ('&B'EQ'L').L
         AIF       ('&B'EQ'ST').ST
         AIF       ('&B'EQ'LR').LR
         AIF       ('&B'EQ'BR').BR
         AIF       ('&B'EQ'LRAL').LRAL
         AIF       ('&B'EQ'BALR').BALR
         AIF       ('&B'EQ'LLA').LLA
         AIF       ('&B'EQ'USING').USING
         AIF       ('&B'EQ'DROP').DROP
         AIF       ('&B'EQ'CNOP').CNOP
         AIF       ('&B'EQ'DC').DC
         AIF       ('&B'EQ'EQU').EQU
         AIF       ('&B'EQ'BLR').BLR
         AIF       ('&B'EQ'BER').BER
         AIF       ('&B'EQ'BHR').BHR
         MNOTE     '***ERROR*** ILLEGAL ''OFFSET'' OPERATION'
&A       DC        H'0'
         MEXIT
.L       AIF       ('&OFFSET'EQ'YES').LST
&A       L         &C,&D                                           V1L5
         MEXIT
.ST      AIF       ('&OFFSET'EQ'YES').LST
&A       ST        &C,&D
         MEXIT
.LST     ANOP
&A       &B        &C,&D.(RO)
         MEXIT
.LR      AIF       ('&OFFSET'EQ'YES').LR2
         AIF       ('&C'EQ'&D').LR1
         AGO       .COMMON
.LR2     ANOP
&A       LA        &C,Z&D.(RO)
.LR1     MEXIT
.BR      AIF       ('&OFFSET'EQ'YES').BR1
&A       BR        &C
         MEXIT
.BR1     ANOP
&A       B         Z&C.(RO)
         MEXIT
.BLR     AIF       ('&OFFSET'EQ'YES').BLR1
&A       BLR       &C
         MEXIT
.BLR1    ANOP
&A       BL        Z&C.(RO)
         MEXIT
.BER     AIF       ('&OFFSET'EQ'YES').BER1
&A       BER       &C
         MEXIT
.BER1    ANOP
&A       BE        Z&C.(RO)
         MEXIT
.BHR     AIF       ('&OFFSET'EQ'YES').BHR1
&A       BHR       &C
         MEXIT
.BHR1    ANOP
&A       BH        Z&C.(RO)
         MEXIT
.BALR    AIF       ('&OFFSET'EQ'NO').COMMON
&A       BAL       &C,Z&D.(RO)
         MEXIT
.LRAL    AIF       ('&OFFSET'EQ'YES').LRAL1
&A       L         &C,&D                                           V1L5
         MEXIT
.LRAL1   ANOP
&A       LR        &C,RO
         AL        &C,&D
         MEXIT
.LLA     AIF       ('&OFFSET'EQ'YES').LLA1
&A       L         &C,&D                                           V1L5
         MEXIT
.LLA1    ANOP
&A       LR        &C,RO
         AL        &C,&D.(RO)
         MEXIT
.USING   AIF       ('&OFFSET'EQ'YES').USING1
         USING     &C,&D
         MEXIT
.USING1  ANOP
         USING     &C,&E
         LA        &E,Z&D.(RO)
         MEXIT
.DROP    AIF       ('&OFFSET'EQ'YES').DROP1
         USING     Z&C,&C
         MEXIT
.DROP1   ANOP
         USING     Z&D,&D
         MEXIT
.COMMON  ANOP
&A       &B        &C,&D
         MEXIT
.CNOP    AIF       ('&C'EQ'BALR').CNOP2
         MNOTE     '***ERROR*** ILLEGAL ''OFFSET'' OPERATION'
&A       DC        H'0'
         MEXIT
.CNOP2   AIF       ('&OFFSET'EQ'YES').CNOP1
         CNOP      2,4
         MEXIT
.CNOP1   ANOP
         CNOP      0,4
         MEXIT
.DC      ANOP
&A       DC        &C.(&D)
         MEXIT
.EQU     AIF       ('&OFFSET'EQ'YES').EQU1
&A       EQU       &C
         MEXIT
.EQU1    ANOP
&A       EQU       &D
         MEND
./ ADD NAME=OUT      0100-80001-80001-1200-00015-00015-00000-MACLIB  00
         MACRO
         OUT       &B
         AIF       ('&B'NE'').A
         BALR      RDONE,RC
         MEXIT
.A       AIF       ('&B'EQ'DONE').B
         AIF       ('&B'NE'LOOP').C
         LR        RDONE,R&B
.B       ANOP
         BR        RC
         MEXIT
.C       ANOP
         LA        RDONE,&B
         BR        RC
         MEND
./ ADD NAME=OUTFLIST 0100-80001-80001-1200-00021-00021-00000-MACLIB  00
         MACRO
         OUTFLIST  &BEGLIST,&DUMMYNM
         GBLC      &FUNAME(255),&FMODE(255)
         GBLA      &NUMFUN,&HCHAIN(255),&LCHAIN(255),&HEAD
         LCLA      &N
         LCLC      &SPMODE                                         V1L4
         BINTREE
         DS        0F                  ALIGN LIST                  V1L4
&DUMMYNM DC        CL6'*-*',AL1(FUNC+REAL4)    NAME, TYPE          V1L4
         DC        AL1(&HEAD,&HEAD),AL3(&DUMMYNM) LOPTR,HIPTR,ADDR V1L4
&BEGLIST EQU       *
&N       SETA      1
.LOOP    ANOP
&SPMODE  SETC      'FUNC+'                                         V1L4
         AIF       ('&FMODE(&N)' NE 'SUBR').FUNC                   V1L4
&SPMODE  SETC      ''                                              V1L4
.FUNC    DC        CL6'&FUNAME(&N)',AL1(&SPMODE&FMODE(&N))         V1L4
         DC    AL1(&LCHAIN(&N)),AL1(&HCHAIN(&N)),VL3(&FUNAME(&N))  V1L4
&N       SETA      &N+1
         AIF       (&N LE &NUMFUN).LOOP
         MEND
./ ADD NAME=OUTFOUR  0100-80001-80001-1200-00015-00015-00000-MACLIB  00
         MACRO
         OUTFOUR   &B
         AIF       ('&B'NE'').A
         BAL       RDONE,COUT4
         MEXIT
.A       AIF       ('&B'EQ'DONE').B
         AIF       ('&B'NE'LOOP').C
         LR        RDONE,R&B
.B       ANOP
         B         COUT4
         MEXIT
.C       ANOP
         LA        RDONE,&B
         B         COUT4
         MEND
./ ADD NAME=OUTPUT   0100-80001-80001-1200-00006-00006-00000-MACLIB  00
         MACRO
&A       OUTPUT    &B,&C,&D
         GBLA      &OUTPUT#
&OUTPUT# SETA      &OUTPUT#+1
&A       THENXXXX  (OUTPUT,&B,&C),&D
         MEND
./ ADD NAME=OUTR1    0100-80001-80001-1200-00010-00010-00000-MACLIB  00
         MACRO
         OUTR1     &B
         AIF       ('&B'EQ'').A
         AIF       ('&B'(1,1)NE'(').B
         AIF       ('&B'EQ'(R1)').A
         LR        R1,&B
.A       MEXIT
.B       ANOP
         LA        R1,&B
         MEND
./ ADD NAME=OUTR2    0100-80001-80001-1200-00013-00013-00000-MACLIB  00
         MACRO
         OUTR2     &B
         AIF       ('&B'EQ'').A
         AIF       ('&B'NE'1').B
         SR        R2,R2
.A       MEXIT
.B       AIF       ('&B'(1,1)NE'(').C
         AIF       ('&B'EQ'(R2)').D
         LR        R2,&B
.D       MEXIT
.C       ANOP
         LA        R2,&B-1
         MEND
./ ADD NAME=OUTSTAR  0100-80001-80001-1200-00015-00015-00000-MACLIB  00
         MACRO
         OUTSTAR   &B
         AIF       ('&B'NE'').A
         BAL       RDONE,COUTSTAR
         MEXIT
.A       AIF       ('&B'EQ'DONE').B
         AIF       ('&B'NE'LOOP').C
         LR        RDONE,R&B
.B       ANOP
         BALR      R1,RC
         MEXIT
.C       ANOP
         LA        RDONE,&B
         BALR      R1,RC
         MEND
./ ADD NAME=PRINTOFF 0100-80001-80001-1200-00046-00046-00000-MACLIB  00
         MACRO
         PRINTOFF  &LOC=
         GBLC      &ON(7)                                          V1L4
         LCLA      &L                                              V1L4
&L       SETA      0                                               V1L4
.S0      ANOP                                                      V1L4
         AIF       (&L GE 7).S1                                    V1L4
&L       SETA      &L+1                                            V1L4
&ON(&L)  SETC      'ON'                                            V1L4
         AGO       .S0                                             V1L4
.S1      ANOP                                                      V1L4
&L       SETA      0                                               V1L4
.S2      ANOP                                                      V1L4
         AIF       (&L GE N'&LOC).END                              V1L4
&L       SETA      &L+1                                            V1L4
         AIF       ('&LOC(&L)' EQ 'CDEFN').S3                      V1L4
         AIF       ('&LOC(&L)' EQ 'STARTA').S4                     V1L4
         AIF       ('&LOC(&L)' EQ 'STARTB').S5                     V1L4
         AIF       ('&LOC(&L)' EQ 'COMMR').S6                      V1L4
         AIF       ('&LOC(&L)' EQ 'MAIN').S7                       V1L4
         AIF       ('&LOC(&L)' EQ 'SYS').S8                        V1L4
         AIF       ('&LOC(&L)' EQ 'ACCT').S9                       V1L4
         AGO       .S2                                             V1L4
.S3      ANOP                                                      V1L4
&ON(1)   SETC      'OFF'                                           V1L4
         AGO       .S2                                             V1L4
.S4      ANOP                                                      V1L4
&ON(2)   SETC      'OFF'                                           V1L4
         AGO       .S2                                             V1L4
.S5      ANOP                                                      V1L4
&ON(3)   SETC      'OFF'                                           V1L4
         AGO       .S2                                             V1L4
.S6      ANOP                                                      V1L4
&ON(4)   SETC      'OFF'                                           V1L4
         AGO       .S2                                             V1L4
.S7      ANOP                                                      V1L4
&ON(5)   SETC      'OFF'                                           V1L4
         AGO       .S2                                             V1L4
.S8      ANOP                                                      V1L4
&ON(6)   SETC      'OFF'                                           V1L4
         AGO       .S2                                             V1L4
.S9      ANOP                                                      V1L4
&ON(7)   SETC      'OFF'                                           V1L4
         AGO       .S2                                             V1L4
.END     MEXIT                                                     V1L4
         MEND                                                      V1L4
./ ADD NAME=PUNCHGEN 0100-80001-80001-1200-00032-00032-00000-MACLIB  00
         MACRO
         PUNCHGEN
         GBLC      &FNAME(255),&FSTATUS(255)
         GBLA      &FNUM(255),&IND2
         LCLA      &L,&SUM
         PUNCH     '         GENERATE  MAXNAME=200,MAXGPS=100'
&L       SETA      1
&SUM     SETA      1
         AGO       .S1
.L1      ANOP
         PUNCH     '  RECORD  IDENT=(3,''END'',2) '
.LOOP    AIF       (&L GE &IND2).END
&SUM     SETA      &SUM+&FNUM(&L)
&L       SETA      &L+1
.S1      AIF       ('&FSTATUS(&SUM)' NE 'DISK').LOOP
         AIF       (&FNUM(&L) EQ 4).P4
         AIF       (&FNUM(&L) EQ 3).P3
         AIF       (&FNUM(&L) EQ 2).P2
         PUNCH     '  MEMBER NAME=(&FNAME(&SUM)) '
         AGO       .L1
.P2       ANOP
         PUNCH     '  MEMBER NAME=(&FNAME(&SUM),&FNAME(&SUM+1)) '
         AGO       .L1
.P3      ANOP
   PUNCH '  MEMBER NAME=(&FNAME(&SUM),&FNAME(&SUM+1),&FNAME(&SUM+2)) '
         AGO       .L1
.P4      ANOP
 PUNCH ' MEMBER NAME=(&FNAME(&SUM),&FNAME(&SUM+1),&FNAME(&SUM+2),&FNAMEX
               (&SUM+3))'
         AGO       .L1
.END       ANOP
         MEND
./ ADD NAME=ROMIT    0100-80001-80001-1200-00006-00006-00000-MACLIB  00
         MACRO
&NAME    ROMIT     &ADDR
&NAME    DC        0H'0'
         DC        X'AFFB'
         DC        AL2(XBOOT-START)
         MEND
./ ADD NAME=SETSTACK 0100-80001-80001-1200-00018-00018-00000-MACLIB  00
         MACRO
&NAME    SETSTACK  &N,&RET
         GBLA      &SETSTK#
         LCLA      &NA
&SETSTK# SETA      &SETSTK#+1
         AIF       (T'&N EQ 'O').NON
         AIF       (T'&N EQ 'U').CHAR
&NA      SETA      &N
         AGO       .LA
.CHAR    ANOP
&NA      SETA      K'&N-2
.LA      ANOP
&NAME    LA        R1,&NA+4(,R9)
         THENXXXX  (DO,CSETSTAK),&RET
         MEXIT
.NON     ANOP
&NAME    THENXXXX  (DO,CSETSTAK),&RET
         MEND
./ ADD NAME=SETSTAT  0100-80001-80001-1200-00025-00025-00000-MACLIB  00
         MACRO
         SETSTAT   &NAME,&COND
         GBLC      &FNAME(255),&FSTATUS(255)
         GBLA      &FNUM(255),&IND1
         LCLA      &SUM,&J
&FNAME(&IND1) SETC '&NAME'
&SUM     SETA      1
&J       SETA     1
         AIF       ('&NAME' NE 'ALL').S1
&J       SETA      &IND1
         AGO       .S2
.LOOP    ANOP
&SUM     SETA      &SUM+&FNUM(&J)
&J       SETA      &J+1
.S1      AIF       ('&FNAME(&SUM)' NE '&NAME').LOOP
         AIF       ('&FSTATUS(&SUM)' EQ '&COND').END
&J       SETA      &SUM+&FNUM(&J)
         AIF       ('&FSTATUS(&SUM)' EQ 'DISK').S2
         MNOTE ' THE STATUS OF &FNAME(&SUM) CANNOT BE SET TO &COND'
         MEXIT
.S2      ANOP
&FSTATUS(&SUM) SETC '&COND'
&SUM     SETA      &SUM+1
         AIF       (&SUM LT &J).S2
.END     MEND
./ ADD NAME=SLIST    0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
          SLIST     &NAME
         FLIST     &NAME,SUBR                                      V1L4
          MEND
./ ADD NAME=SNAPS    0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&NAME    SNAPS     &IDENT,&ADDR,&NBYTES
&NAME    CSNAP     &IDENT,&ADDR,&NBYTES
         MEND
./ ADD NAME=SPRIN    0100-80001-80001-1200-00011-00011-00000-MACLIB  00
         MACRO
&NAME    SPRIN     &ADDR,&NBYTES
         GBLA      &SPRIN#
&SPRIN#  SETA      &SPRIN#+1
&NAME    STM       0,15,XPRINTS
         LA        R1,&ADDR
         AIF       (T'&NBYTES EQ 'O').NGIVEN
         LA        R2,&NBYTES-1
.NGIVEN  BAL       R14,XPRINT
         LM        0,15,XPRINTS
         MEND
./ ADD NAME=STACK    0100-80001-80001-1200-00010-00010-00000-MACLIB  00
         MACRO
         STACK     &ENTRIES=
         GBLA      &NUM
         AIF       (&ENTRIES GT 21).MSG1
&NUM     SETA      &ENTRIES
         AGO       .EXIT
.MSG1    ANOP
         MNOTE     '** MAX OF 21 ENTRIES ALLOWED IN TABLE - 21 ASSUMED'
&NUM     SETA      21
.EXIT    MEND
./ ADD NAME=STACKGEN 0100-80001-80001-1200-00018-00018-00000-MACLIB  00
         MACRO
         STACKGEN
         GBLC      &LIBCORE
         GBLA      &NUM
         DC        0D'0'
DMYNAME  DC        CL8' '
DMYTTR   DC        4X'00'
STAKBOT  EQU       *
         AIF       (&NUM EQ 1).GEN1
&NUM     SETA      &NUM-1
         DC        &NUM.XL12'404040404040404000000000'
.GEN1    ANOP
UNPROT   EQU       *
         AIF       ('&LIBCORE' EQ 'USE').FIND12
TABLE    EQU       *
.FIND12  ANOP
         DC        CL8' ',4X'00'
         MEND
./ ADD NAME=STACKRES 0100-80001-80001-1200-00018-00018-00000-MACLIB  00
         MACRO
         STACKRES  &CORE=
         GBLC      &LIBCORE,&CORLIST(255)
         GBLA      &CORE#
         LCLA      &I
&CORE#   SETA      0
&I       SETA      N'&CORE
         AIF       (&I LE 255).OK
         MNOTE     '*** MAX OF 255 LIBRARY AND FUNCTION NAMES ALLOWED -X
               FIRST 255 USED ***'
&I       SETA      255
.OK      AIF       (&I GT 0).GT0
         MNOTE     '*** LIBCORE=OMIT ASSUMED ***'
.GT0     ANOP
&CORE#   SETA      &CORE#+1
&CORLIST(&CORE#)  SETC   '&CORE(&CORE#)'    PUT ALL NAMES IN CORLIST
         AIF      (&CORE# LT &I).GT0
.EXIT    MEND
./ ADD NAME=STATLIST 0100-80001-80001-1200-00021-00021-00000-MACLIB  00
         MACRO
         STATLIST
         GBLC      &FNAME(255),&FSTATUS(255)
         GBLA      &IND1
         LCLA      &N
         LCLC      &NAME                                           V1L4
&N       SETA      1
         MNOTE     0,'  THE STATUS OF EACH SUBPROGRAMME IS AS FOLLOWS'
         MNOTE     *,'   EXP       CORE   '                        V1L4
         MNOTE     *,'   DEXP      CORE   '                        V1L4
         MNOTE     *,'   ALOG      CORE   '                        V1L4
         MNOTE     *,'   ALOG10    CORE   '                        V1L4
         MNOTE     *,'   DLOG      CORE   '                        V1L4
         MNOTE     *,'   DLOG10    CORE   '                        V1L4
.LIST    ANOP
&NAME    SETC      '&FNAME(&N)'.'       '                          V1L4
&NAME    SETC      '&NAME'(1,6)                                    V1L4
         MNOTE     *,'   &NAME    &FSTATUS(&N)   '                 V1L4
&N       SETA      &N+1
         AIF       (&N LT &IND1).LIST
         MEND
./ ADD NAME=STATUS   0100-80001-80001-1200-00013-00013-00000-MACLIB  00
         MACRO
         STATUS    &FN
         GBLA      &IND1
         GBLC      &FNAME(255),&STATUS,&FSTATUS(255)
         LCLA      &N
         ACTR      150
&N       SETA      0
&FNAME(&IND1)  SETC   '&FN'
.LOOP1   ANOP
&N       SETA      &N+1
         AIF       ('&FNAME(&N)' NE '&FN').LOOP1
&STATUS  SETC      '&FSTATUS(&N)'
         MEND
./ ADD NAME=STAX     0100-80001-80001-1200-00189-00189-00000-MACLIB  00
          MACRO
&NAME   STAX  &EXADDR,&OBUF=,&IBUF=,&USADDR=,&REPLACE=,&DEFER=,&MF=I
         LCLA  &A
         LCLC  &GNAME,&H
         LCLA  &REPLSW,&REPL,&DEFRSW
&REPL    SETA  X'80'
&GNAME   SETC  'IHB'.'&SYSNDX'
         AIF   ('&EXADDR' EQ '' AND '&DEFER' EQ '').CANCEL
         AIF   ('&EXADDR' NE '').DEFER4
         AIF   ('&OBUF' NE '' OR '&IBUF' NE '').CANCEL
         AIF   ('&REPLACE' NE '' OR '&USADDR' NE '').CANCEL
.DEFER4  AIF   ('&REPLACE' EQ '').DEFER5
         AIF   ('&REPLACE' EQ 'YES').DEFER5
&REPLSW  SETA  X'40'
.DEFER5  ANOP
         AIF   ('&NAME' EQ '' OR '&MF' EQ 'L').CONTA
&NAME    DS    0H
         AGO   .CONTA
.ERROR   MNOTE 'INVALID REGISTER SPECIFICATION'
         MEXIT
.ERROR1  MNOTE 'INVALID OPTION SPECIFIED'
         MEXIT
.CONTA   ANOP
         AIF   ('&DEFER' EQ '').DEFER1       IS DEFER REQUESTED
         AIF   ('&DEFER' EQ 'YES').DEFER2    SHOULD DEFER ATTN
         AIF   ('&DEFER' EQ 'NO').DEFER3     SHOULD CANCEL DEFER ATTN
         AGO   .ERROR1        INVALID OPERAND HAS BEEN SPECIFIED
.DEFER2  ANOP                 SET DEFER SWITCH EQUAL TO
&DEFRSW  SETA  X'20'          DEFER/YES OR X'20'
         AGO   .DEFER1
.DEFER3  ANOP                 SET DEFER SWITCH EQUAL TO
&DEFRSW  SETA  X'10'          DEFER/NO OR X'10'
.DEFER1  ANOP
         AIF   ('&MF' EQ 'L').LROUT      IS THIS A LIST REQUEST
         AIF   ('&MF' EQ 'I').IROUT
         AIF   ('&MF(1)' EQ 'E').EROUT
         MNOTE 'INVALID MF SPECIFICATION'
         MEXIT
.EROUT   ANOP
         AIF   ('&MF'(4,1) EQ '(').ISAREG
         LA    1,&MF(2)      ADDRESS OF PARAMETER LIST INTO REG 1
         AGO   .CONTB
.ISAREG  AIF   ('&MF(2)' EQ '(1)').CONTB
&A       SETA  K'&MF-6
&H       SETC  '&MF'(5,&A)
         LR    1,&H          ADDRESS OF PARAMETER LIST INTO REG 1
.CONTB   ANOP
         AIF   ('&EXADDR' EQ '').CONTC
         AIF   ('&EXADDR'(1,1) EQ '(').ISAREG1
         LA    14,&EXADDR    ADDRESS OF EXIT ROUTINE
         ST    14,0(1,0)     INTO PARAMETER LIST
         AGO   .CONTC
.ISAREG1 ST    &EXADDR(1),0(1,0)  ADDRESS OF EXIT ROUTINE INTO LIST
.CONTC   AIF   ('&USADDR' EQ '').CONTD
         AIF   ('&USADDR'(1,1) EQ '(').ISAREG2
         LA    14,&USADDR    ADDRESS OF USER PARAMETERS
         ST    14,16(1,0)    INTO LIST
         AGO   .CONTD
.ISAREG2 ST    &USADDR(1),16(1,0) ADDRESS OF USER PARAMETERS INTO
*                                 LIST
.CONTD   AIF   ('&OBUF(1)' EQ '').CNTSUB1
         AIF   ('&OBUF(1)'(1,1) EQ '(').IRGSUB1
         LA    14,&OBUF(1)   ADDRESS OF OUTPUT BUFFERS
         ST    14,8(1,0)     INTO LIST
         AGO   .CNTSUB1
.IRGSUB1 ST   &OBUF(1),8(1,0)  ADDRESS OF OUTPUT BUFFERS INTO LIST
.CNTSUB1 AIF  ('&OBUF(2)' EQ '').CONTE
         AIF   ('&OBUF(2)'(1,1) EQ '(').IRGSUB2
         B     &GNAME.B            AROUND CONSTANT           AJ A52533
&GNAME.A DC    AL2(&OBUF(2))       OBUF LENGTH               AJ A52533
&GNAME.B MVC   6(2,1),&GNAME.A     MOVE LENGTH TO PARM LIST  AJ A52533
         AGO   .CONTE
.IRGSUB2 STH  &OBUF(2),6(1)  LENGTH OF OUTPUT BUFFERS INTO LIST
.CONTE   AIF   ('&IBUF(1)' EQ '').CNTSUB2
         AIF   ('&IBUF(1)'(1,1) EQ '(').IRGSUB3
         LA    14,&IBUF(1)    ADDRESS OF INPUT BUFFERS
         ST    14,12(1,0)    INTO LIST
         AGO   .CNTSUB2
.IRGSUB3 ST   &IBUF(1),12(1,0)    ADDRESS OF INPUT BUFFERS INTO LIST
.CNTSUB2 AIF  ('&IBUF(2)' EQ '').CONTG
         AIF   ('&IBUF(2)'(1,1) EQ '(').IRGSUB4
         B     &GNAME.D            GO AROUND CONSTANT        AJ A52533
&GNAME.C DC    AL2(&IBUF(2))       IBUF LENGTH               AJ A52533
&GNAME.D MVC   4(2,1),&GNAME.C     IBUF LENGTH TO PARM LIST  AJ A52533
         AGO   .CONTG
.IRGSUB4 STH  &IBUF(2),4(1)  LENGTH OF INPUT BUFFERS INTO LIST
.CONTG   AIF   ('&REPLACE' EQ 'YES').CNTSUB5
         AIF   ('&REPLACE' EQ 'NO').CNTSUB6
.CNTSUB5 NI    16(1),&REPL   INDICATE REPLACE PREVIOUS STAX
.CNTSUB6 OI    16(1),&REPLSW+&DEFRSW   REPLACE/NO REPLACE, DEFERRAL IND
         AGO   .SVC
.LROUT   ANOP
&NAME    DS    0F
.CONTL4  AIF   ('&EXADDR' EQ '').DEFER6
         AIF   ('&EXADDR'(1,1) EQ '(').ERROR
         DC    AL4(&EXADDR)  ADDRESS OF EXIT ROUTINE
         AGO   .DEFER7
.DEFER6  DC    AL4(0)         ADDRESS OF EXIT ROUTINE
.DEFER7  ANOP
.CNTL6   AIF   ('&IBUF(2)' EQ '').CONTL1
         AIF   ('&IBUF(2)'(1,1) EQ '(').ERROR
         DC    AL2(&IBUF(2)) LENGTH OF INPUT BUFFERS
         AGO   .CONTL2
.CONTL1  DC    AL2(0)        LENGTH OF INPUT BUFFERS
.CONTL2  AIF   ('&OBUF(2)' EQ '').CONTL3
         AIF   ('&OBUF(2)'(1,1) EQ '(').ERROR
         DC    AL2(&OBUF(2)) LENGTH OF OUTPUT BUFFERS
         AGO   .CONTLA
.CONTL3  DC    AL2(0)        LENGTH OF OUTPUT BUFFERS
.CONTLA  AIF   ('&OBUF(1)' EQ '').CONTLB
         AIF   ('&OBUF(1)'(1,1) EQ '(').ERROR
         DC    AL4(&OBUF(1))  ADDRESS OF OUTPUT BUFFERS
         AGO   .CONTL8
.CONTLB  DC    A(0)          ADDRESS OF OUTPUT BUFFERS
.CONTL8  AIF   ('&IBUF(1)' EQ '').CONTL9
         AIF   ('&IBUF(1)'(1,1) EQ '(').ERROR
         DC    AL4(&IBUF(1))    ADDRESS OF INPUT BUFFERS
         AGO   .CONTL0
.CONTL9  DC    A(0)          ADDRESS OF INPUT BUFFERS
.CONTL0  DC    AL1(&REPLSW+&DEFRSW)    REPLACE/NO REPLACE, DEFERRAL IND
.CONTL6  AIF   ('&USADDR' EQ '').CONTL7
         AIF   ('&USADDR'(1,1) EQ '(').ERROR
         DC    AL3(&USADDR)   ADDRESS OF USER PARAMETERS
         AGO   .ENDLIST
.CONTL7  DC    AL3(0)        ADDRESS OF USER PARAMETERS
.ENDLIST  ANOP
         MEXIT
.IROUT   ANOP
         LA    1,&GNAME      ADDRESS OF PARAMETER LIST
         AIF   ('&IBUF(2)' EQ '').IROUT1
         AIF   ('&IBUF(2)'(1,1) NE '(').IROUT1
         STH   &IBUF(2),4(1) LENGTH OF INPUT BUFFERS
.IROUT1  AIF   ('&OBUF(2)' EQ '').IROUT2
         AIF   ('&OBUF(2)'(1,1) NE '(').IROUT2
         STH   &OBUF(2),6(1) LENGTH OF OUTPUT BUFFERS
.IROUT2  AIF   ('&EXADDR' EQ '').IROUT3
         AIF   ('&EXADDR'(1,1) NE '(').IROUT3
         ST    &EXADDR(1),0(1,0)  ADDRESS OF EXIT ROUTINE INTO LIST
.IROUT3  AIF   ('&USADDR' EQ '').IROUT4
         AIF   ('&USADDR'(1,1) NE '(').IROUT4
         IC    15,16(1)           GET OPTIONS BYTE
         ST    &USADDR(1),16(1,0) ADDRESS OF USER PARAMETERS IN LIST
         STC   15,16(1)           PRESERVE OPTIONS BYTE
.IROUT4  AIF   ('&IBUF' EQ '').IROUT5
         AIF   ('&IBUF(1)'(1,1) NE '(').IROUT5
         ST    &IBUF(1),12(1,0)   ADDRESS OF INPUT BUFFERS INTO LIST
.IROUT5  AIF   ('&OBUF' EQ '').IROUT6
         AIF   ('&OBUF(1)'(1,1) NE '(').IROUT6
         ST    &OBUF(1),8(1,0)    ADDRESS OF OUTPUT BUFFERS INTO LIST
.IROUT6  ANOP
         B     20(0,1)
&GNAME   DS    0F
.CNTD    AIF   ('&EXADDR' EQ '').CNTE
         AIF   ('&EXADDR'(1,1) EQ '(').CNTE
         DC    AL4(&EXADDR)  ADDRESS OF EXIT ROUTINE
         AGO  .CONTF2
.CNTE    DC    AL4(0)   ADDRESS OF EXIT ROUTINE
.CONTF2  AIF   ('&IBUF(2)' EQ '').CNTA
         AIF   ('&IBUF(2)'(1,1) EQ '(').CNTA
         DC    AL2(&IBUF(2)) LENGTH OF INPUT BUFFERS
         AGO   .CNTB
.CNTA    DC    AL2(0)        LENGTH OF INPUT BUFFERS
.CNTB    AIF   ('&OBUF(2)' EQ '').CNTC
         AIF   ('&OBUF(2)'(1,1) EQ '(').CNTC
         DC    AL2(&OBUF(2))  LENGTH OF OUTPUT BUFFERS
         AGO   .CNTK
.CNTC    DC    AL2(0)        LENGTH OF OUTPUT BUFFERS
.CNTK    AIF   ('&OBUF(1)' EQ '').CNTL
         AIF   ('&OBUF(1)'(1,1) EQ '(').CNTL
         DC    AL4(&OBUF(1)) ADDRESS OF OUTPUT BUFFERS
         AGO   .CNTI
.CNTL    DC    A(0)          ADDRESS OF OUPTUT BUFFERS
.CNTI    AIF   ('&IBUF(1)' EQ '').CNTJ
         AIF   ('&IBUF(1)'(1,1) EQ '(').CNTJ
         DC    AL4(&IBUF(1)) ADDRESS OF INPUT BUFFERS
         AGO   .CNTM
.CNTJ    DC    A(0)          ADDRESS OF INPUT BUFFERS
.CNTM    DC    AL1(&REPLSW+&DEFRSW)    REPLACE/NO REPLACE, DEFERRAL IND
.CNTF    AIF   ('&USADDR' EQ '').CNTH
         AIF   ('&USADDR'(1,1) EQ '(').CNTH
         DC    AL3(&USADDR)  ADDRESS OF USER PARAMETERS
         AGO   .SVC
.CNTH    DC    AL3(0)        ADDRESS OF USER PARAMETERS
         AGO   .SVC
.CANCEL  ANOP
&NAME    DS    0H
         SR    1,1           CANCEL PREVIOUS STAX
.SVC     SVC   96
         MEND
./ ADD NAME=TGET     0100-80001-80001-1200-00136-00136-00000-MACLIB  00
         MACRO
&NAME    TGET  &BFF,&SIZE,&EDIT,&WAIT
.*********************************************************************.
.*                                                                    *
.*RELEASE 23 DELETIONS                                               *.
.*                                                                   *.
.*RELEASE 22 DELETIONS                                               *.
.*                                                                   *.
.*RELEASE 21 DELETIONS                                               *.
.*                                                                   *.
.*STATUS - CHANGE LEVEL 000                                          *.
.*                                                                   *.
.*NAME - TGET                                                        *.
.*                                                                   *.
.*FUNCTION - THIS MACRO IS USED TO MOVE A LINE OF INPUT FROM THE TIOC*.
.*   INPUT BUFFER TO THE USER'S BUFFER AREA.                         *.
.*                                                                   *.
.*********************************************************************.
.*
.*   TGET BUFFER AREA,BUFFER SIZE,EDIT,WAIT  (EDIT/WAIT ARE DEFAULT)
.*          (2-12)      (2-12)    ASIS NOWAIT
.*
         LCLA  &OPT
         LCLB  &SW1,&SW2
         LCLB  &E,&W,&RET
         LCLC  &ERROPT
&OPT     SETA  X'80'
         AIF   ('&BFF' EQ '' OR '&SIZE' EQ '').ERROR1  ERROR CHECK
         AIF   ('&EDIT' EQ 'R').RF      CHECK FOR R FORM
         AIF   ('&EDIT' EQ '').WAIT       SKIP IF NULL
         AIF   ('&EDIT' EQ 'EDIT').EDI    SET EDIT
         AIF   ('&EDIT' EQ 'ASIS').ASI    SET ASIS
         AIF   ('&EDIT' EQ 'WAIT').WAI    SET WAIT
         AIF   ('&EDIT' EQ 'NOWAIT').NOW  SET NOWAIT
&ERROPT  SETC  '&EDIT'                  SET FOR ERROR MSG
         AGO   .ERROR3
.WAIT    ANOP
&RET     SETB  1
         AIF   ('&WAIT' EQ '').CHKREG     SKIP IF NULL
         AIF   ('&WAIT' EQ 'EDIT').EDI    SET EDIT
         AIF   ('&WAIT' EQ 'ASIS').ASI    SET ASIS
         AIF   ('&WAIT' EQ 'WAIT').WAI    SET WAIT
         AIF   ('&WAIT' EQ 'NOWAIT').NOW  SET NOWAIT
&ERROPT  SETC  '&WAIT'                  SET FOR ERROR MSG
         AGO   .ERROR3
.EDI     ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECFIED
         AGO   .RET
.ASI     ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECFIED
&SW1     SETB  1                        ASIS OPTION
         AGO   .RET
.WAI     ANOP
         AIF   (&W).ERROR2              DUP OPTION
&W       SETB  1                        WAIT OPTION SPECIFIED
         AGO   .RET
.NOW     ANOP
         AIF   (&W).ERROR2              DUP OPTION
&W       SETB  1                        WAIT OPTION SPECIFIED
&SW2     SETB  1                        NOWAIT OPTION
         AGO   .RET
.RET     ANOP
         AIF   (&RET).CHKREG
         AGO   .WAIT                    NEXT POSITION
.CHKREG  SPACE 1
         CNOP  0,4
&OPT     SETA  &OPT+&SW2*16+&SW1        SET OPTIONS
         AIF   ('&BFF'(1,1) EQ '(' OR '&SIZE'(1,1) EQ '(').REGST REG.
.*                                      NOTATION
.*
.*   REGULAR EXPANSION
.*
&NAME    B     *+12                     BRANCH AROUND CONSTANTS
         DC    AL2(0)                   FILLER
         DC    AL2(&SIZE)               BUFFER SIZE
         DC    AL1(&OPT)                OPTION BITS
         DC    AL3(&BFF)                ADDR OF BUFFER
         LM    0,1,*-8                  LOAD PARAMETER REGISTERS
.SVC     SVC   93                       ISSUE SVC
         SPACE
         MEXIT
.*
.*   REGISTER NOTATION
.*
.REGST   ANOP
&NAME    B     *+8                      BRANCH AROUND CONSTANT
         AIF   ('&BFF'(1,1) EQ '(' AND '&SIZE'(1,1) EQ '(').BOTH BOTH
.*                                      PARAMETERS ARE IN REG. FORM
         AIF   ('&SIZE'(1,1) EQ '(').SZREG   SIZE IN REG
.*
.*   BUFFER ADDR IN REGISTER FORM
.*
         DC    AL1(&OPT)                OPTION BITS
         DC    AL3(0)                   BUFFER ADDR
         LA    1,0(,&BFF(1))            CLR HIGH ORDR BYTE + LD BFR ADR
         O     1,*-8                    SET OPTIONS
         LA    0,&SIZE                  LOAD SIZE OF BUFFER
         AGO   .SVC                     GOTO ISSUE SVC
.*
.*   BUFFER SIZE IN REGISTER FORM
.*
.SZREG   DC    AL1(&OPT)                OPTION BITS
         DC    AL3(&BFF)                BUFFER ADDR
         L     1,*-4                    LOAD PARAMETER REGISTER
         AIF   ('&SIZE' EQ '(0)').SVC   SIZE IN REG. 0
         LR    0,&SIZE(1)               LOAD BUFFER SIZE IN REG 0
         AGO   .SVC                     GOTO ISSUE SVC
.*
.*   WHEN BOTH ARE IN REGISTER NOTATION
.*
.BOTH    DC    AL1(&OPT)                OPTION BITS
         DC    AL3(0)                   BUFFER ADDR
         LA    1,0(,&BFF(1))            CLR HIGH ORDR BYTE + LD BFR ADR
         O     1,*-8                    SET OPTIONS
         AIF   ('&SIZE' EQ '(0)').SVC   GOTO SVC IF (0) SPECIFIED
         LR    0,&SIZE(1)               LOAD BUFFER SIZE IN REG 0
         AGO   .SVC                     GOTO ISSUE SVC
.RF      ANOP
         AIF   ('&WAIT' NE '').RERR
         AIF   ('&BFF'(1,1) NE '(' OR '&SIZE'(1,1) NE '(').RERR
&NAME    DS    0H
         AIF   ('&BFF' EQ '(1)').SIZE
         LR    1,&BFF(1)                LOAD BUFFER ADDRESS IN REG 1
.SIZE    AIF   ('&SIZE' EQ '(0)').SVC
         LR    0,&SIZE(1)               LOAD BUFFER SIZE IN REG 0
         AGO   .SVC
.RERR    IHBERMAC 192
         MEXIT
.ERROR1  IHBERMAC 24
         MEXIT
.ERROR2  IHBERMAC 54,,,
         MEXIT
.ERROR3  IHBERMAC 49,,&ERROPT
         MEND
./ ADD NAME=THEN     0100-80001-80001-1200-00018-00018-00000-MACLIB  00
         MACRO
&A       THEN
         GBLA      &THEN#
         LCLA      &B
&THEN#   SETA      &THEN#+1
         AIF       ('&A'EQ'').A3
&A       DC        0H'0'
.A3      ANOP
&B       SETA      1
.A2      ANOP
         AIF       ('&SYSLIST(&B+1)'EQ'').A1
         AIF       ('&SYSLIST(&B+1)'(1,1)NE'(').A1
         THENXXXX  &SYSLIST(&B)
&B       SETA      &B+1
         AGO       .A2
.A1      ANOP
         THENXXXX  &SYSLIST(&B),&SYSLIST(&B+1)
         MEND
./ ADD NAME=THENXXXX 0100-80001-80001-1200-00124-00124-00000-MACLIB  00
         MACRO
&A       THENXXXX  &B,&C
         GBLA      &THENXX#
         LCLA      &X
         LCLC      &Y
&THENXX# SETA      &THENXX#+1
         AIF       ('&B'(1,1)EQ'(').A1
         AIF       ('&B'EQ'DONE').A6
         AIF       ('&B'EQ'LOOP').A6
&X       SETA      1
.LKKA1   ANOP
&Y       SETC      '&X'
         AIF       ('&B' EQ 'R&Y').LKKA2
&X       SETA      &X+1
         AIF       ((&X LT 14) OR (&X EQ 15)).LKKA1
&A       B         &B
         MEXIT
.A6      ANOP
&A       BR        R&B
         MEXIT
.LKKA2   BR        &B
         MEXIT
.A1      ANOP
         AIF       ('&B(1)'EQ'DO').A2
         AIF       ('&B(1)'EQ'OUTPUT').A9
         AIF       ('&B(1)'EQ'ERROR').A10
         AIF       ('&B(2)'EQ'E').A3
         AIF       ('&B(2)'EQ'O').A40
         AIF       ('&B(2)'EQ'N').A41
         AIF       ('&B(2)'EQ'X').A42
         AIF       ('&B(2)'EQ'EQ').A3
         AIF       ('&B(2)'EQ'EQU').A3
         AIF       ('&B(2)'EQ'OR').A40
         AIF       ('&B(2)'EQ'AND').A41
         AIF       ('&B(2)'EQ'XOR').A42
         AIF       ('&B(2)'EQ'ON').A
         AIF       ('&B(2)'EQ'OFF').B
         MNOTE     '***ERROR*** ILLEGAL ''THEN'' OPERATION'
&A       DC        H'0'
         MEXIT
.A2      ANOP
         AIF       ('&C'EQ'').A4
         AIF       ('&C'EQ'DONE').A5
         AIF       ('&C'EQ'LOOP').A47
&X       SETA      1
.LKKB1   ANOP
&Y       SETC      '&X'
         AIF       ('&C' EQ 'R&Y').LKKB2
&X       SETA      &X+1
         AIF       ((&X LT 14) OR (&X EQ 15)).LKKB1
&A       LA        RDONE,&C
         B         &B(2)
         MEXIT
.A4      ANOP
&A       BAL       RDONE,&B(2)
         MEXIT
.A5      ANOP
&A       B         &B(2)
         MEXIT
.A47     ANOP
&A       LR        RDONE,RLOOP
         B         &B(2)
         MEXIT
.LKKB2   ANOP
&A       LR        RDONE,&C
         B         &B(2)
         MEXIT
.A       ANOP
&A       MVI       &B(1),B'10000000'
         AGO       .A43
.B       ANOP
&A       MVI       &B(1),B'00000000'
         AGO       .A43
.A40     ANOP
&A       OI        &B(1),&B(3)
         AGO       .A43
.A41     ANOP
&A       NI        &B(1),&B(3)
         AGO       .A43
.A42     ANOP
&A       XI        &B(1),&B(3)
         AGO       .A43
.A3      ANOP
&A       MVI       &B(1),&B(3)
.A43     ANOP
         AIF       ('&C'EQ'').A7
         AIF       ('&C'EQ'DONE').A8
         AIF       ('&C'EQ'LOOP').A8
&X       SETA      1
.LKKC1   ANOP
&Y       SETC      '&X'
         AIF       ('&C' EQ 'R&Y').LKKC2
&X       SETA      &X+1
         AIF       ((&X LT 14) OR (&X EQ 15)).LKKC1
         B         &C
.A7      ANOP
         MEXIT
.A8      ANOP
         BR        R&C
         MEXIT
.LKKC2   BR        &C
         MEXIT
.A9      ANOP
         AIF       ('&A'EQ'').A30
&A       DC        0H'0'
.A30     ANOP
         AIF       ('&B(3)'EQ'').AAAA
         AIF       ('&B(3)'NE'*').AAAA
         OUTR2     &B(2)
         OUTSTAR   &C
         MEXIT
.AAAA    ANOP
         OUTR1     &B(3)
         AIF       ('&B(2)'EQ'').BBBB
         AIF       ('&B(2)'NE'4').BBBB
         OUTFOUR   &C
         MEXIT
.BBBB    ANOP
         OUTR2     &B(2)
         OUT       &C
         MEXIT
.A10     ANOP
&A       $ERROR    &B(2),&C                                        V1L5
         MEND
./ ADD NAME=TPUT     0100-80001-80001-1200-00240-00240-00000-MACLIB  00
         MACRO
&NAME    TPUT  &BFF,&SIZE,&EDIT,&WAIT,&HOLD,&BRKI,&PRTY,&TJID=,        *
               &TJIDLOC=
.*********************************************************************.
.*                                                                   *.
.*RELEASE 23 DELETIONS                                               *.
.*                                                                   *.
.*RELEASE 22 DELETIONS                                               *.
.*                                                                   *.
.*RELEASE 21 DELETIONS                                               *.
.*                                                                   *.
.*STATUS - CHANGE LEVEL 001                                     SA60002
.*                                                                   *.
.*NAME - TPUT                                                        *.
.*                                                                   *.
.*FUNCTION - THE TPUT MACRO IS USED TO MOVE A RECORD FROM THE USER'S *.
.*   BUFFER TO A TS OUTPUT BUFFER TO BE TRANSMITTED TO A TERMINAL.   *.
.*                                                                    *
.*********************************************************************.
.*
.*  TPUT BUFFER ADDR,BUFFER SIZE,EDIT   ,WAIT  ,NOHOLD,NOBREAK,HIGHP
.*        (2-12)      (2-12)     ASIS    NOWAIT HOLD   BREAKIN LOWP
.*                               CONTROL
.*                               FULLSCR                        SA60002
.*       TJID=XX   (EDIT,WAIT,NOHOLD,NOBREAK,HIGHP ARE DEFAULTS)
.*
.*        TJIDLOC=ADDR
.*
         LCLA  &OPT
         LCLA  &RET
         LCLB  &E,&W,&H,&B,&P
         LCLC  &PARM,&ID
&ID      SETC  '0'                      SET TJID TO '0'
         AIF   ('&BFF' EQ '' OR '&SIZE' EQ '').ERROR1  MNOTE
         AIF   ('&TJID' NE '' AND '&TJIDLOC' NE '').ERROR2  MNOTE
         AIF   ('&EDIT' EQ 'R').RF      CHECK FOR R FORM
&PARM    SETC  '&EDIT'
.CKPARM  ANOP
&RET     SETA  &RET+1
         AIF   ('&PARM' EQ '').RET           NULL, TRY NEXT
         AIF   ('&PARM' EQ 'EDIT').EDI       SET EDIT
         AIF   ('&PARM' EQ 'ASIS').ASI       SET ASIS
         AIF   ('&PARM' EQ 'CONTROL').CON    SET CONTROL
         AIF   ('&PARM' EQ 'FULLSCR').FULLS SET FULL SCREEN     SA60002
         AIF   ('&PARM' EQ 'WAIT').WAI       SET WAIT
         AIF   ('&PARM' EQ 'NOWAIT').NOW     SET NOWAIT
         AIF   ('&PARM' EQ 'HOLD').HOL       SET HOLD
         AIF   ('&PARM' EQ 'NOHOLD').NOH     SET NOHOLD
         AIF   ('&PARM' EQ 'NOBREAK').NOB    SET NOBREAK
         AIF   ('&PARM' EQ 'BREAKIN').BRE    SET BREAKIN
         AIF   ('&PARM' EQ 'HIGHP').HPR      SET HIGHP
         AIF   ('&PARM' EQ 'LOWP').LPR       SET LOWP
         AGO   .ERROR3
.*
.*  CHECK REGISTER NOTATION IS USED
.*
.CHKREG  SPACE 1
         AIF   ('&BFF'(1,1) EQ '(' OR '&SIZE'(1,1) EQ '(').REGFM  REG.
.*                                      FORM MACRO
         AIF   ('&TJID' EQ '').CHKLOC   GOTO CHECK TJIDLOC
         AIF   ('&TJID'(1,1) EQ '(').REGFM   REG. FORM MACRO
&ID      SETC  '&TJID'                  SET TJID
         AGO   .EXPAND                  GOTO EXPANSION
.CHKLOC  AIF   ('&TJIDLOC' EQ '').EXPAND  GO EXPAND IF NO 'TJIDLOC'
         AIF   ('&TJIDLOC'(1,1) EQ '(').REGFM  REG. FORM MACRO
.*
.*   REGULAR FORMAT OF MACRO
.*
.EXPAND  CNOP  0,4
         AIF   ('&TJIDLOC' NE '').LOC   TJLOC SPECIFIED
&NAME    B     *+12                     BRANCH AROUND CONSTANTS
         DC    AL2(&ID)                 TJID
         DC    AL2(&SIZE)               BUFFER SIZE
         DC    AL1(&OPT)                OPTIONS
         DC    AL3(&BFF)                BUFFER ADDR
         LM    0,1,*-8                  LOAD PARAMETER REGISTERS
.SVC     SVC   93                       ISSUE TGET/TPUT SVC
         SPACE 1
         MEXIT
.*
.*   TJIDLOC IS SPECIFIED
.*
.LOC     ANOP
&NAME    IC    0,&TJIDLOC               LOAD 1ST BYTE OF TJID
         SLL   0,8                      SHIFT IT
         IC    0,&TJIDLOC+1             LOAD 2ND BYTE OF TJID
         SLL   0,16                     SHIFT TJID TO HI-ORDER BYTE
         AIF   (&OPT EQ 0).ZERO         BRANCH IF OPTIONS ARE ZERO
         O     0,*+8                    LOAD BUFFER SIZE
         B     *+12                     BRANCH AROUND CONSTANT
         DC    AL2(0)                   TJID
         DC    AL2(&SIZE)               BUFFER SIZE
         DC    AL1(&OPT)                OPTIONS
         DC    AL3(&BFF)                BUFFER ADDR
         L     1,*-4                    LOAD OPTIONS & BUFFER ADDR
         AGO   .SVC                     GOTO ISSUE SVC
.ZERO    LA    1,&SIZE                  LOAD BUFFER SIZE
         OR    0,1                      OR IT INTO REGISTER 1
         LA    1,&BFF                   Z HIGH ORDR BYTE & LD BFR ADDR
         AGO   .SVC                     GOTO ISSUE SVC
.*
.*   REGISTER FORMAT
.*
.REGFM   AIF   ('&TJIDLOC' EQ '').NOLOC   SKIP IF TJIDLOC NOT SPECIFIED
         AIF   ('&TJIDLOC'(1,1) EQ '(').REGLOC    LOC IN REG  FORM
&NAME    IC    15,&TJIDLOC              INSERT 1ST BYTE OF TJID
         SLL   15,8                     MOVE IT TO NEXT BYTE
         IC    15,&TJIDLOC+1            INSERT 2ND BYTE OF TJID
         SLL   15,16                    MOVE TJID TO HI-ORDER 2 BYTES
         AGO   .CHKSIZE                 GOTO CHECK SIZE
.REGLOC  ANOP
&NAME    IC    15,0(,&TJIDLOC(1))       INSERT 1ST BYTE OF TJID
         SLL   15,8                     MOVE IT TO NEXT BYTE
         IC    15,1(,&TJIDLOC(1))       INSERT 2ND BYTE OF TJID
         SLL   15,16                    MOVE TJID TO HI-ORDER 2 BYTES
         AGO   .CHKSIZE                 GOTO CHECK SIZE
.*
.*   WHEN TJIDLOC IS NOT SPECIFIED
.*
.NOLOC   AIF   ('&TJID' NE '').TJIDYES
&NAME    DS    0H                       TJID IS '0'
         AGO   .CHKSIZE                 GOTO CHECK SIZE
.TJIDYES AIF   ('&TJID'(1,1) EQ '(').IDREG   TJID IN REG FORM
&NAME    LA    15,&TJID                 LOAD TJID
         AGO   .SHIFT                   GOTO SHIFT REG.0
.IDREG   ANOP
&NAME    LR    15,&TJID(1)              LOAD TJID IN REG 0
.SHIFT   SLL   15,16                    SHIFT TJID TO HI-ORDER BYTE
.*
.*   CHECK SIZE OF BUFFER (BY NOW TJID IS IN HI-ORDER 2 BYTES OF REG 0)
.*
.CHKSIZE AIF   ('&SIZE'(1,1) EQ '(').SZREG   SKIP IF SIZE IN REG
         LA    0,&SIZE                  LOAD SIZE IN REG.0
         AGO   .ORSIZE                  GOTO OR SIZE
.SZREG   AIF   ('&SIZE' EQ '(0)').ORSIZE  GOTO SET SIZE IN REG. 0
         LR    0,&SIZE(1)               LOAD BUFFER SIZE
.ORSIZE  AIF   ('&TJID' EQ '' AND '&TJIDLOC' EQ '').PAST
         OR    0,15                     LOAD TJID + BUFFER SIZE
.PAST    AIF   (&OPT EQ 0 AND '&BFF'(1,1) EQ '(').ORONE
         AIF   (&OPT EQ 0 AND '&BFF'(1,1) NE '(').ZOPT ZERO OPTN
         CNOP  0,4
         B     *+8
         DC    AL1(&OPT)                OPTION BITS
         AIF   ('&BFF'(1,1) EQ '(').REGGO   BFFR IN REG.
         DC    AL3(&BFF)                BUFFER ADDR
         L     1,*-4                    LOAD PARAMETER IN REG.1
         AGO   .SVC                     GOTO ISSUE SVC
.ZOPT    LA    1,&BFF                   LOAD BUFFER ADDR IN REG 1
         AGO   .SVC                     ISSUE SVC
.REGGO   DC    AL3(0)                   BUFFER ADDR
         AIF   ('&BFF' EQ '(1)').ORONE  GOTO OR OPTIONS
         L     1,*-4                    LOAD OPTIONS
         OR    1,&BFF(1)                SET OPTIONS AND BUFFER ADDR
         AGO   .SVC                     GOTO ISSUE SVC
.ORONE   LA    1,0(,&BFF(1))            CLR HIGH ORDR BYTE + LD BFR ADR
         AIF   (&OPT EQ 0).SVC          GOTO ISSUE SVC IF OPT EQ 0
         O     1,*-8                    SET OPTIONS
         AGO   .SVC
.EDI     ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECFIED
         AGO   .RET
.ASI     ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECFIED
&OPT     SETA  &OPT+1                   SET EDIT=ASIS
         AGO   .RET
.CON     ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECFIED
&OPT     SETA  &OPT+2                   SET EDIT=CONTROL
         AGO   .RET
.FULLS   ANOP                                                   SA60002
         AIF   (&E).ERROR2              DUP OPTION              SA60002
&E       SETB  1                        EDIT OPTION SPECIFIED   SA60002
&OPT     SETA  &OPT+3                   CNTL+ASIS FOR FULLSCR   SA60002
         AGO   .RET                                             SA60002
.WAI     ANOP
         AIF   (&W).ERROR2              DUP OPTION
&W       SETB  1                        WAIT OPTION SPECIFIED
         AGO   .RET
.NOW     ANOP
         AIF   (&W).ERROR2              DUP OPTION
&W       SETB  1                        WAIT OPTION SPECIFIED
&OPT     SETA  &OPT+X'10'               SET WAIT=NOWAIT
         AGO   .RET
.HOL     ANOP
         AIF   (&H).ERROR2              DUP OPTION
&H       SETB  1                        HOLD OPTION SPECIFIED
&OPT     SETA  &OPT+X'08'               SET HOLD=HOLD
         AGO   .RET
.NOH     ANOP
         AIF   (&H).ERROR2              DUP OPTION
&H       SETB  1                        HOLD OPTION SPECIFIED
         AGO   .RET
.BRE     ANOP
         AIF   (&B).ERROR2              DUP OPTION
&B       SETB  1                        BREAK OPTION SPECIFIED
&OPT     SETA  &OPT+X'04'               SET BREAKIN
         AGO   .RET
.NOB     ANOP
         AIF   (&B).ERROR2              DUP OPTION
&B       SETB  1                        BREAK OPTION SPECIFIED
         AGO   .RET
.HPR     ANOP
         AIF   (&P).ERROR2              DUP OPTION
&P       SETB  1                        PRIORITY OPTION SPECIFIED
         AGO   .RET
.LPR     ANOP
         AIF   (&P).ERROR2              DUP OPTION
&P       SETB  1                        PRIORITY OPTION SPECIFIED
&OPT     SETA  &OPT+X'20'               SET  LOW PRIORITY OPTION
.RET     ANOP
&PARM    SETC  '&WAIT'
         AIF   ('&RET' EQ '1').CKPARM   CHECK WAIT
&PARM    SETC  '&HOLD'
         AIF   ('&RET' EQ '2').CKPARM   CHECK HOLD
&PARM    SETC  '&BRKI'
         AIF   ('&RET' EQ '3').CKPARM   CHECK BRKI
&PARM    SETC  '&PRTY'
         AIF   ('&RET' EQ '4').CKPARM   CHECK PRTY
         AGO   .CHKREG                  DONE WITH OPTIONS
.RF      ANOP
         AIF   ('&WAIT' NE '' OR '&HOLD' NE '' OR '&BRKI' NE '' OR '&PRX
               TY' NE '' OR '&TJID' NE '' OR '&TJIDLOC' NE '').RERR
         AIF   ('&BFF'(1,1) NE '(' OR '&SIZE'(1,1) NE '(').RERR
&NAME    DS    0H
         AIF   ('&BFF' EQ '(1)').SIZE
         LR    1,&BFF(1)                LOAD OPTIONS & BUFFER ADDR
.SIZE    AIF   ('&SIZE' EQ '(0)').SVC
         LR    0,&SIZE(1)               LOAD TJID & BUFFER SIZE
         AGO   .SVC
.RERR    IHBERMAC 192
         MEXIT
.ERROR1  IHBERMAC 24
         MEXIT
.ERROR2  IHBERMAC 54,,,
         MEXIT
.ERROR3  IHBERMAC 49,,&PARM
         MEND
./ ADD NAME=TRACEOFF 0100-80001-80001-1200-00004-00004-00000-MACLIB  00
         MACRO
&ADDR    TRACEOFF
&ADDR    TM        0,6
         MEND
./ ADD NAME=TRACEON  0100-80001-80001-1200-00019-00019-00000-MACLIB  00
         MACRO
&ADDR    TRACEON   &PARM=SAVE
         LCLA      &DISP
         LCLC      &TEMP
&DISP    SETA      8
&TEMP    SETC      '&ADDR'
         CNOP      2,4
         AIF       ('&PARM' NE 'SAVE').ADDR100
&TEMP    STM       14,15,*+18
&TEMP    SETC      ''
&DISP    SETA      16
.ADDR100 ANOP
         LM        14,15,*+6
         BR        15
         DC        A(*+&DISP)
         DC        V(TRACE)
         AIF       ('&PARM' NE 'SAVE').END
         DS        2F
.END     MEND
./ ADD NAME=TRACERLD 0100-80001-80001-1200-00102-00102-00000-MACLIB  00
         MACRO
&ADDR    TRACERLD
         LCLA      &I,&SAVESW,&MFSW,&DISP1(2),&DISP2(2)
         LCLA      &NUMENT,&LSYM
         LCLA      &JUMP
         LCLC      &TEMP
&SAVESW  SETA      1
&MFSW    SETA      0
&NUMENT  SETA      N'&SYSLIST
&DISP1(1) SETA     22
&DISP1(2) SETA     18
&DISP2(1) SETA     16
&DISP2(2) SETA     8
         AIF       ('&SYSLIST(&NUMENT,1)' EQ '').ADDR40
.ADDR10  AIF       ('&SYSLIST(&NUMENT,1)'(1,4) NE '''MF=').ADDR20
         DC        A(1)
&MFSW    SETA      0-1
         AIF       ('&SYSLIST(&NUMENT,1)'(5,1) EQ 'L').ADDR30
         DC        A(2)
&MFSW    SETA      &NUMENT
         AGO       .ADDR30
.ADDR20  AIF       ('&SYSLIST(&NUMENT,1)' NE '''PARM=NOSAVE''').ADDR40
         DC        A(3)
&SAVESW  SETA      2
.ADDR30  ANOP
&NUMENT  SETA      &NUMENT-1
         AIF       (&NUMENT GT 0).ADDR10
.ADDR40  AIF       (&MFSW LT 0).ADDR100
&JUMP    SETA     &DISP2(&SAVESW)+4
         AIF       (&MFSW GT 0).ADDR50
&JUMP    SETA      &JUMP+36+&NUMENT*20
.ADDR50  ANOP
         CNOP      2,4
&TEMP    SETC      '&ADDR'
         AIF       (&SAVESW EQ 2).ADDR60
&TEMP    STM       14,15,*+34
&TEMP    SETC      ''
.ADDR60  ANOP
&TEMP    LA        14,*+&DISP1(&SAVESW)
         L         15,4(0,14)
         MVC       0(4,15),0(14)
         AIF       (&SAVESW EQ 2).ADDR70
         LM        14,15,8(14)
.ADDR70  ANOP
         B         *+&JUMP
         AIF       (&MFSW NE 0).ADDR80
         DC        A(*+&DISP2(&SAVESW))
.ADDR80  AIF       (&MFSW EQ 0).ADDR90
&LSYM    SETA      K'&SYSLIST(&MFSW,1)
&TEMP    SETC      '&SYSLIST(&MFSW,1)'(8,&LSYM-9)
         DC        A(&TEMP)
.ADDR90  ANOP
         DC        V(TRPGMPTR)
         AIF       (&SAVESW EQ 2).ADDR100
         DS        2F
.ADDR100 AIF       (&MFSW GE 0).ADDR110
&ADDR    DS        0F
.ADDR110 AIF       (&MFSW GT 0).END
&I       SETA      0
         DC        V(TRQEND)
         DC        X'00000000'
         DC        X'FFFFFFFF'
         DC        CL8'PROGRAM'
         DC        A(*+16)
         DC        V(TRQEND)
         DC        V(TRQEND)
         DC        A(0)
.ADDR120 ANOP
&I       SETA      &I+1
&TEMP    SETC      '&SYSLIST(&I,4)'
         AIF       (&I NE &NUMENT).ADDR130
&TEMP    DC        V(TRQEND)
.ADDR130 AIF       (&I EQ &NUMENT).ADDR140
&TEMP    DC        A(*+20)
.ADDR140 AIF       ('&SYSLIST(&I,1)' NE '').ADDR150
         DC        X'FFFFFFFF'
.ADDR150 AIF       ('&SYSLIST(&I,1)' EQ '').ADDR160
         DC        A(&SYSLIST(&I,1))
.ADDR160 AIF       ('&SYSLIST(&I,2)' EQ '').ADDR170
         DC        A(&SYSLIST(&I,2))
.ADDR170 AIF       ('&SYSLIST(&I,2)' NE '').ADDR180
         DC        X'FFFFFFFF'
.ADDR180 AIF       ('&SYSLIST(&I,3)' EQ '').ADDR200
&LSYM    SETA      K'&SYSLIST(&I,3)
         AIF       ('&SYSLIST(&I,3)'(1,1) NE '''').ADDR190
&LSYM    SETA      &LSYM-2
&TEMP    SETC      ''
         AIF       (&LSYM EQ 0).ADDR210
&TEMP    SETC     '&SYSLIST(&I,3)'(2,&LSYM)
         AGO       .ADDR210
.ADDR190 ANOP
         DC        A(&SYSLIST(&I,3)),A(0)
         AGO       .ADDR230
.ADDR200 ANOP
&TEMP    SETC      '&SYSLIST(&I,1)'
&LSYM    SETA      K'&SYSLIST(&I,1)
.ADDR210 AIF       (&LSYM EQ 8).ADDR220
         DC        CL7'&TEMP',AL1(&LSYM)
.ADDR220 AIF       (&LSYM NE 8).ADDR230
         DC        CL8'&TEMP'
.ADDR230 AIF       (&I LT &NUMENT).ADDR120
.END     MEND
./ ADD NAME=XROUTA   0100-80001-80001-1200-00008-00008-00000-MACLIB  00
         MACRO
&NAME    XROUTA    &NUM
         USING     ZW1,R3                                          V1L4
&NAME    CLC       XUNDEF(&NUM),ZW1                                V1L4
         $FREE     R3                                              V1L5
         BNER      R14
         B         XERRUV2
         MEND
./ ADD NAME=XROUTE   0100-80001-80001-1200-00008-00008-00000-MACLIB  00
         MACRO
&NAME    XROUTE    &NUM
         USING     ZW1,R3                                          V1L4
&NAME    CLC       XUNDEF(&NUM),ZW1                                V1L4
         $FREE     R3                                              V1L5
         BNER      R14
         B         XERRUV1
         MEND
./ ADD NAME=XROUTS   0100-80001-80001-1200-00008-00008-00000-MACLIB  00
         MACRO
&NAME    XROUTS    &NUM
&NAME    MVC       *+8(2),ZR14+2       SET UP NEXT LA              V1L4
         LA        R15,*-*                                         V1L4
         CLC       XUNDEF(&NUM),ZR15
         BNER      R14
         B         XERRUV0
         MEND
